{"version":3,"sources":["components/Home.js","config/Api.js","components/Dashboard.js","components/JobCMS.js","components/ActivityModal.js","components/Job.js","components/Login.js","App.js","index.js"],"names":["Home","useState","JSON","parse","localStorage","getItem","user","Container","name","Api","process","headers","token","Authorization","body","callback","obj","method","stringify","fetch","BASE","then","response","json","err","status","message","error","job_id","Dashboard","jobs","setJobs","useEffect","getMyJobs","data","console","Button","as","Link","to","variant","className","Table","striped","bordered","hover","map","job","index","_id","company","applied","onClick","e","window","confirm","params","deleteJob","newJobs","filter","JobCMS","history","useHistory","useParams","setName","setCompany","jobURL","setJobURL","reviewURL","setReviewURL","linkedinURL","setLinkedinURL","source","setSource","skills","setSkills","location","setLocation","minCTC","setMinCTC","maxCTC","setMaxCTC","notes","setNotes","HRName","setHRName","HREmail","setHREmail","HRPhone","setHRPhone","Date","appliedDate","setAppliedDate","setStatus","msg","alert","setAlert","getJobDetails","log","job_url","review_url","linkedin_url","ctc_min","ctc_max","hr","email","phone","undefined","Form","Row","Col","FormGroup","FormLabel","FormControl","type","placeholder","value","onChange","target","selected","dt","join","split","rows","sts","toString","editJob","goBack","newJob","submitForm","Alert","show","dismissible","onClose","ActivityModal","forwardRef","props","ref","blankActivity","is_schedule","schedule_date","schedule_done","setShow","isEdit","setISEdit","activity","setActivity","useImperativeHandle","showModal","oldAct","Modal","onHide","ModalHeader","ModalTitle","ModalBody","InputGroup","Prepend","Checkbox","checked","ModalFooter","activity_id","editActivity","resp","parentCallback","newActivity","Job","activities","setJob","activityModal","useRef","Jumbotron","href","icon","faExternalLinkSquareAlt","faLinkedin","faStar","skill","current","faPlus","faEdit","Fragment","size","deleteActivity","newActivities","faTrash","stamp","toLocaleDateString","toLocaleTimeString","ReactTimeAgo","date","locale","Login","lEmail","setLoginEmail","lPassword","setLoginPassword","nName","setNewName","nEmail","setNewEmail","nPassword","setNewPassword","nPassword2","setNewPassword2","parentCheckLogin","startSession","setItem","password","login","checkLogin","signup","TimeAgo","addDefaultLocale","en","addLocale","App","isLoggedIn","isLogged","setIsLogged","Navbar","NavbarBrand","NavbarToggle","aria-controls","NavbarCollapse","id","Nav","NavLink","removeItem","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.22fe8ca0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Container } from \"react-bootstrap\";\n\nconst Home = () => {\n  const [user,setUser]=useState(JSON.parse(localStorage.getItem(\"data\")||\"{}\"));\n  return (\n    <Container>\n      <h3>Hi {user.name}!</h3>\n      Welcome to Track Interview App!\n  \n    </Container>\n  );\n};\n\nexport default Home;\n","const Api={};\nApi.BASE=process.env.REACT_APP_API_URL;\n\nApi.headers=()=>{\n    var headers={'Content-Type':'application/json'};\n    var token=localStorage.getItem(\"token\")||false;\n    if(token){\n        headers.Authorization=\"Bearer \"+token;\n    }\n    return headers;\n}\nApi.login=(body,callback)=>{\n    try{\n        var obj={};\n        obj.headers=Api.headers();\n        obj.method=\"POST\";\n        obj.body=JSON.stringify(body);\n        fetch(Api.BASE+\"/api/login\",obj)\n            .then(response=> response.json())\n            .then(json=>callback(json));\n    }\n    catch(err){\n        callback({status:false,message:\"Failed to validate user\",error:err});\n    }\n};\nApi.signup=(body,callback)=>{\n    try{\n        var obj={};\n        obj.headers=Api.headers();\n        obj.method=\"POST\";\n        obj.body=JSON.stringify(body);\n        fetch(Api.BASE+\"/api/signup\",obj)\n            .then(response=> response.json())\n            .then(json=>callback(json));\n    }\n    catch(err){\n        callback({status:false,message:\"Failed to register new user\",error:err});\n    }\n};\nApi.getMyJobs=(callback)=>{\n    try{\n        var obj={};\n        obj.headers=Api.headers();\n        obj.method=\"GET\";\n        fetch(Api.BASE+\"/api/jobs\",obj)\n            .then(response=> response.json())\n            .then(json=>callback(json));\n    }\n    catch(err){\n        callback({status:false,message:\"Failed to get Jobs\",error:err});\n    }\n}\nApi.getJobDetails=(job_id,callback)=>{\n    try{\n        var obj={};\n        obj.headers=Api.headers();\n        obj.method=\"GET\";\n        fetch(`${Api.BASE}/api/jobs/${job_id}`,obj)\n            .then(response=> response.json())\n            .then(json=>callback(json));\n    }\n    catch(err){\n        callback({status:false,message:\"Failed to get job details\",error:err});\n    }\n}\n\nApi.newJob=(body,callback)=>{\n    try{\n        var obj={};\n        obj.headers=Api.headers();\n        obj.method=\"POST\";\n        obj.body=JSON.stringify(body);\n        fetch(Api.BASE+\"/api/jobs\",obj)\n            .then(response=> response.json())\n            .then(json=>callback(json));\n    }\n    catch(err){\n        callback({status:false,message:\"Failed to add Job\",error:err});\n    }\n}\nApi.editJob=(body,callback)=>{\n    try{\n        var obj={};\n        obj.headers=Api.headers();\n        obj.method=\"PUT\";\n        obj.body=JSON.stringify(body);\n        fetch(Api.BASE+\"/api/jobs\",obj)\n            .then(response=> response.json())\n            .then(json=>callback(json));\n    }\n    catch(err){\n        callback({status:false,message:\"Failed to edit Job\",error:err});\n    }\n}\nApi.deleteJob=(body,callback)=>{\n    try{\n        var obj={};\n        obj.headers=Api.headers();\n        obj.method=\"DELETE\";\n        obj.body=JSON.stringify(body);\n        fetch(Api.BASE+\"/api/jobs\",obj)\n            .then(response=> response.json())\n            .then(json=>callback(json));\n    }\n    catch(err){\n        callback({status:false,message:\"Failed to delete Job\",error:err});\n    }\n}\nApi.newActivity=(body,callback)=>{\n    try{\n        var obj={};\n        obj.headers=Api.headers();\n        obj.method=\"POST\";\n        obj.body=JSON.stringify(body);\n        fetch(Api.BASE+\"/api/activities\",obj)\n            .then(response=> response.json())\n            .then(json=>callback(json));\n    }\n    catch(err){\n        callback({status:false,message:\"Failed to add activity\",error:err});\n    }\n}\nApi.editActivity=(body,callback)=>{\n    try{\n        var obj={};\n        obj.headers=Api.headers();\n        obj.method=\"PUT\";\n        obj.body=JSON.stringify(body);\n        fetch(Api.BASE+\"/api/activities\",obj)\n            .then(response=> response.json())\n            .then(json=>callback(json));\n    }\n    catch(err){\n        callback({status:false,message:\"Failed to edit activity\",error:err});\n    }\n}\nApi.deleteActivity=(body,callback)=>{\n    try{\n        var obj={};\n        obj.headers=Api.headers();\n        obj.method=\"DELETE\";\n        obj.body=JSON.stringify(body);\n        fetch(Api.BASE+\"/api/activities\",obj)\n            .then(response=> response.json())\n            .then(json=>callback(json));\n    }\n    catch(err){\n        callback({status:false,message:\"Failed to delete activity\",error:err});\n    }\n}\nexport default Api;","import React,{useEffect,useState} from 'react';\nimport { Button, Container, Table } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport Api from '../config/Api';\n\nconst Dashboard = ()=>{\n    var [jobs,setJobs]=useState([]);\n\n    const getMyJobs=()=>{\n        Api.getMyJobs((data)=>{\n            if(data.status){\n                //console.log(data);\n                setJobs(data.data);\n            }else{\n                console.error(\"Failed to load My Jobs\");\n            }\n        });\n    };\n    const deleteJob=(job)=>{\n        if(window.confirm(`Do you want to delete job \"${job.name} - ${job.company}?`)){\n            var params={};\n            params.job_id=job._id;\n            Api.deleteJob(params,(data)=>{\n                if(data.status){\n                    var newJobs=jobs.filter((e)=>{\n                        return e._id!==job._id\n                    });\n                    setJobs(newJobs);\n                }\n            });\n        }\n    }\n    useEffect(()=>{\n        getMyJobs();\n    },[]);\n    return (\n        <div>\n            <Container>\n                <Button as={Link} to=\"/job-add\" variant=\"outline-primary\" className=\"float-right\">[+] New Job</Button>\n                <h3>Dashboard</h3>\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <td>Sr#</td>\n                            <td>Position</td>\n                            <td>Company</td>\n                            <td>Status</td>\n                            <td>Applied</td>\n                            <td>Action</td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {jobs.map((job,index)=>{\n                        return (<tr key={job._id}>\n                            <td>{index+1}</td>\n                            <td><Link to={`/job/${job._id}`}>{job.name}</Link></td>\n                            <td>{job.company}</td>\n                            <td>{job.status}</td>\n                            <td>{job.applied}</td>\n                            <td><Button as={Link} to={`/job-edit/${job._id}`}>Edit</Button> <Button variant=\"danger\" onClick={(e)=>deleteJob(job)}>Delete</Button></td>\n                        </tr>);\n                    })}\n                    </tbody>\n                </Table>\n            </Container>\n        </div>\n    );\n}\n\nexport default Dashboard;","import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  Col,\n  Container,\n  Form,\n  FormControl,\n  FormGroup,\n  FormLabel,\n  Row,\n  Alert,\n} from \"react-bootstrap\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport ReactDatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport Api from \"../config/Api\";\n\nconst JobCMS = () => {\n  const history = useHistory();\n  var { job_id } = useParams();\n  const [name, setName] = useState(\"\");\n  const [company, setCompany] = useState(\"\");\n  const [jobURL, setJobURL] = useState(\"\");\n  const [reviewURL, setReviewURL] = useState(\"\");\n  const [linkedinURL, setLinkedinURL] = useState(\"\");\n  const [source, setSource] = useState(\"\");\n  const [skills, setSkills] = useState([]);\n  const [location, setLocation] = useState(\"\");\n  const [minCTC, setMinCTC] = useState(0);\n  const [maxCTC, setMaxCTC] = useState(0);\n  const [notes, setNotes] = useState(\"\");\n  const [HRName, setHRName] = useState(\"\");\n  const [HREmail, setHREmail] = useState(\"\");\n  const [HRPhone, setHRPhone] = useState(\"\");\n  const [appliedDate, setAppliedDate] = useState(new Date());\n  const [status,setStatus]=useState(\"applied\");\n\n  const [alert, setAlert] = useState({ msg: \"\", variant: \"\" });\n\n  var submitForm = (e) => {\n    var body = {};\n    body.name = name;\n    body.company = company;\n    body.job_url = jobURL;\n    body.review_url = reviewURL;\n    body.linkedin_url = linkedinURL;\n    body.source = source;\n    body.skills = skills;\n    body.location = location;\n    body.ctc_min = minCTC;\n    body.ctc_max = maxCTC;\n    body.notes = notes;\n    body.hr = { name: HRName, email: HREmail, phone: HRPhone };\n    if(appliedDate===\"\" || appliedDate===undefined|| appliedDate===null){\n      body.applied = null;\n    }else{\n      body.applied = appliedDate.toString();\n    }\n    body.status=status;\n    if (job_id) {\n      body.job_id = job_id;\n      Api.editJob(body, (response) => {\n        if (response.status) {\n          setAlert({ msg: response.message, variant: \"success\" });\n          history.goBack();\n        } else {\n          setAlert({ msg: response.message, variant: \"danger\" });\n        }\n      });\n    } else {\n      Api.newJob(body, (response) => {\n        if (response.status) {\n          setAlert({ msg: response.message, variant: \"success\" });\n          history.goBack();\n        } else {\n          setAlert({ msg: response.message, variant: \"danger\" });\n        }\n      });\n    }\n  };\n  ///if job_id is present, get job details for EDIT form.\n  useEffect(() => {\n    if (job_id) {\n      Api.getJobDetails(job_id, (response) => {\n        console.log(response);\n        if (response.status) {\n          var { data } = response;\n          setName(data.name);\n          setCompany(data.company);\n          setJobURL(data.job_url);\n          setReviewURL(data.review_url);\n          setLinkedinURL(data.linkedin_url);\n          setSource(data.source);\n          setSkills(data.skills);\n          setLocation(data.location);\n          setMinCTC(data.ctc_min);\n          setMaxCTC(data.ctc_max);\n          setNotes(data.notes);\n          setHRName(data.hr.name);\n          setHREmail(data.hr.email);\n          setHRPhone(data.hr.phone);\n          setAppliedDate(new Date(data.applied));\n          setStatus(data.status);\n        } else {\n          console.error(\"Job not found.\");\n          job_id = undefined;\n        }\n      });\n    }\n  }, []);\n  const arrStatus=[\"pending\",\"applied\",\"response\",\"interviewing\",\"waiting\",\"rejected\",\"offer_recieved\",\"decline\"];\n  return (\n    <Container>\n      <h3>{job_id === undefined ? \"Create New Job\" : \"Edit Job details\"}</h3>\n      <Form>\n        <Row>\n          <Col>\n            <FormGroup>\n              <FormLabel>Job Position</FormLabel>\n              <FormControl\n                type=\"text\"\n                placeholder=\"Enter Job Position\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              />\n            </FormGroup>\n          </Col>\n          <Col>\n            <Row>\n              <Col>\n                <FormGroup>\n                  <FormLabel>Company</FormLabel>\n                  <FormControl\n                    type=\"text\"\n                    placeholder=\"Enter Company Name\"\n                    value={company}\n                    onChange={(e) => setCompany(e.target.value)}\n                  />\n                </FormGroup>\n              </Col>\n              <Col>\n                <FormGroup>\n                  <FormLabel>Applied On</FormLabel>\n                  <ReactDatePicker\n                    as={FormControl}\n                    selected={appliedDate}\n                    onChange={(dt) =>\n                      setAppliedDate(dt)\n                    }\n                  />\n                </FormGroup>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <FormGroup>\n              <FormLabel>Job URL</FormLabel>\n              <FormControl\n                type=\"url\"\n                placeholder=\"Enter Job URL\"\n                value={jobURL}\n                onChange={(e) => setJobURL(e.target.value)}\n              />\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <FormLabel>LinkedIn URL</FormLabel>\n              <FormControl\n                type=\"text\"\n                placeholder=\"Enter LinkedIn URL\"\n                value={linkedinURL}\n                onChange={(e) => setLinkedinURL(e.target.value)}\n              />\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <FormLabel>\n                Review URL <small>(eg. Glassdoor)</small>\n              </FormLabel>\n              <FormControl\n                type=\"url\"\n                placeholder=\"Enter Review URL\"\n                value={reviewURL}\n                onChange={(e) => setReviewURL(e.target.value)}\n              />\n            </FormGroup>\n          </Col>\n\n          <Col>\n            <FormGroup>\n              <FormLabel>Source</FormLabel>\n              <FormControl\n                type=\"text\"\n                placeholder=\"Enter Job Source\"\n                value={source}\n                onChange={(e) => setSource(e.target.value)}\n              />\n            </FormGroup>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <FormGroup>\n              <FormLabel>Skills</FormLabel>\n              <FormControl\n                type=\"text\"\n                placeholder=\"Skills needed for this job\"\n                value={skills.join(\",\")}\n                onChange={(e) => setSkills(e.target.value.split(\",\"))}\n              />\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <FormLabel>Job Location</FormLabel>\n              <FormControl\n                type=\"text\"\n                placeholder=\"Enter Job Location\"\n                value={location}\n                onChange={(e) => setLocation(e.target.value)}\n              />\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <FormLabel>Minimum CTC</FormLabel>\n              <FormControl\n                type=\"text\"\n                placeholder=\"Minimum CTC\"\n                value={minCTC}\n                onChange={(e) => setMinCTC(e.target.value)}\n              />\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <FormLabel>Maximum CTC</FormLabel>\n              <FormControl\n                type=\"text\"\n                placeholder=\"Maximum CTC\"\n                value={maxCTC}\n                onChange={(e) => setMaxCTC(e.target.value)}\n              />\n            </FormGroup>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <FormGroup>\n              <FormLabel>Notes</FormLabel>\n              <FormControl\n                as=\"textarea\"\n                rows=\"3\"\n                placeholder=\"Notes about this Job\"\n                value={notes}\n                onChange={(e) => setNotes(e.target.value)}\n              />\n            </FormGroup>\n          </Col>\n          <Col>\n            <div>HR Contact</div>\n            <Row>\n              <Col>\n                <FormGroup>\n                  <FormControl\n                    type=\"text\"\n                    placeholder=\"HR Name\"\n                    value={HRName}\n                    onChange={(e) => setHRName(e.target.value)}\n                  />\n                </FormGroup>\n              </Col>\n              <Col>\n                <FormGroup>\n                  <FormControl\n                    type=\"email\"\n                    placeholder=\"HR Email Address\"\n                    value={HREmail}\n                    onChange={(e) => setHREmail(e.target.value)}\n                  />\n                </FormGroup>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <FormGroup>\n                  <FormControl\n                    type=\"tel\"\n                    placeholder=\"HR Phone Number\"\n                    value={HRPhone}\n                    onChange={(e) => setHRPhone(e.target.value)}\n                  />\n                </FormGroup>\n              </Col>\n              <Col>\n              <FormGroup>\n                <FormControl as=\"select\" onChange={(e) => setStatus(e.target.value)}>{arrStatus.map((sts,index)=>{\n                  return <option key={`x${index}`} value={sts} selected={sts===status}>{sts}</option>;\n                })}</FormControl>\n              </FormGroup>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Button\n              variant=\"primary\"\n              className=\"mr-3\"\n              onClick={(e) => submitForm(e)}\n            >\n              Save\n            </Button>\n            <Button variant=\"secondary\" onClick={() => history.goBack()}>\n              Cancel\n            </Button>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <br />\n            <Alert\n              show={alert.msg !== \"\"}\n              variant={alert.variant}\n              dismissible\n              onClose={() => setAlert({ msg: \"\", variant: \"\" })}\n            >\n              {alert.msg}\n            </Alert>\n          </Col>\n        </Row>\n      </Form>\n    </Container>\n  );\n};\n\nexport default JobCMS;\n","import React, { forwardRef, useImperativeHandle, useState } from \"react\";\nimport {\n  Button,\n  Form,\n  FormControl,\n  FormGroup,\n  FormLabel,\n  InputGroup,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalTitle,\n} from \"react-bootstrap\";\nimport ModalHeader from \"react-bootstrap/esm/ModalHeader\";\nimport ReactDatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Api from \"../config/Api\";\n\nconst ActivityModal = forwardRef((props, ref) => {\n  const blankActivity = {\n    body: \"\",\n    is_schedule: false,\n    schedule_date: new Date(),\n    schedule_done: false,\n  };\n\n  const [show, setShow] = useState(false);\n  const [isEdit, setISEdit] = useState(false);\n  const [activity, setActivity] = useState(blankActivity);\n  const [date, setDate] = useState(new Date());\n\n  const job = props.job;\n  useImperativeHandle(ref, () => {\n    return {\n      showModal: (oldAct) => {\n        setShow(true);\n        if (oldAct == null) {\n          setISEdit(false);\n          setActivity(blankActivity);\n        } else {\n          setISEdit(true);\n          oldAct.schedule_date = new Date(oldAct.schedule_date);\n          if (oldAct.is_schedule) {\n            oldAct.is_schedule = true;\n          } else {\n            oldAct.is_schedule = false;\n          }\n          if (oldAct.schedule_done) {\n            oldAct.schedule_done = true;\n          } else {\n            oldAct.schedule_done = false;\n          }\n          setActivity(oldAct);\n        }\n      },\n    };\n  });\n  const submitForm = () => {\n    var body = {};\n    body.job_id = job._id;\n    body.body = activity.body;\n    body.is_schedule = activity.is_schedule;\n    body.schedule_date = activity.schedule_date;\n    body.schedule_done = activity.schedule_done;\n    if (isEdit) {\n      body.activity_id = activity._id;\n      Api.editActivity(body, (resp) => {\n        if(resp.status){\n          setShow(false);\n          props.parentCallback();\n        }\n      });\n    } else {\n      Api.newActivity(body, (resp) => {\n        if(resp.status){\n          setShow(false);\n          props.parentCallback();\n        }\n      });\n    }\n  };\n  return (\n    <Modal show={show} onHide={() => {}}>\n      <ModalHeader>\n        <ModalTitle>{isEdit ? \"Edit Activity\" : \"New Activity\"}</ModalTitle>\n      </ModalHeader>\n      <ModalBody>\n        <Form>\n          <FormGroup>\n            <FormLabel>Description</FormLabel>\n            <FormControl\n              type=\"text\"\n              placeholder=\"Description\"\n              value={activity.body}\n              onChange={(e) =>\n                setActivity({ ...activity, body: e.target.value })\n              }\n            ></FormControl>\n          </FormGroup>\n          <FormLabel>Set Reminder</FormLabel>\n          <InputGroup>\n            <InputGroup.Prepend>\n              <InputGroup.Checkbox\n                checked={activity.is_schedule}\n                onChange={(e) =>\n                  setActivity({\n                    ...activity,\n                    is_schedule: !activity.is_schedule,\n                  })\n                }\n              />\n            </InputGroup.Prepend>\n            <ReactDatePicker\n              as={FormControl}\n              selected={activity.schedule_date}\n              onChange={(dt) =>\n                setActivity({ ...activity, schedule_date: new Date(dt) })\n              }\n            />\n          </InputGroup>\n        </Form>\n      </ModalBody>\n      <ModalFooter>\n        <Button variant=\"primary\" onClick={submitForm}>\n          Save\n        </Button>\n        <Button\n          variant=\"secondary\"\n          onClick={() => {\n            setShow(false);\n            props.parentCallback();\n          }}\n        >\n          Cancel\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n});\n\nexport default ActivityModal;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Container, Row, Col, Jumbotron, Button, Modal } from \"react-bootstrap\";\nimport { useParams,Link } from \"react-router-dom\";\nimport Api from \"../config/Api\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLinkedin } from \"@fortawesome/free-brands-svg-icons\";\nimport {\n  faEdit,\n  faExternalLinkSquareAlt,\n  faPlus,\n  faStar,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport ReactTimeAgo from \"react-time-ago\";\nimport ActivityModal from \"./ActivityModal\";\n\nconst Job = () => {\n  const { job_id } = useParams();\n  const [job, setJob] = useState({ skills: [], activities: [] });\n  const activityModal = useRef();\n\n  const getJobDetails = () => {\n    Api.getJobDetails(job_id, (resp) => {\n      if (resp.status) {\n        setJob(resp.data);\n      }\n    });\n  };\n\n  useEffect(() => {\n    getJobDetails();\n  }, []);\n  const parentCallback=()=>{\n    getJobDetails();\n  };\n  const deleteActivity=(activity)=>{\n    if(window.confirm(\"Do you want to delete this activity?\")){\n      var params={};\n      params.activity_id=activity._id;\n      Api.deleteActivity(params,(data)=>{\n          if(data.status){\n              var newActivities=job.activities.filter((e)=>{\n                  return e._id!==activity._id\n              });\n              setJob({...job,activities:newActivities});\n          }\n      });\n    }\n  };\n  return (\n    <Container>\n      <hr />\n      <Row>\n        <Col>\n          <Jumbotron>\n            <h3 className=\"company-name\">\n              {job.company} <small>({job.location})</small>\n            </h3>\n            <div className=\"position-name\">\n              {job.name}{\" \"}\n              <small>\n                <a href={job.job_url} target=\"_new\">\n                  {job.source}{\" \"}\n                  <FontAwesomeIcon icon={faExternalLinkSquareAlt} />\n                </a>\n              </small>\n            </div>\n            <div className=\"icon-row\">\n              <a href={job.linkedin_url} target=\"_new\">\n                <FontAwesomeIcon icon={faLinkedin} /> LinkedIn\n              </a>{\" \"}\n              |{\" \"}\n              <a href={job.review_url} target=\"_new\">\n                <FontAwesomeIcon icon={faStar} /> Glassdoor Review\n              </a>{\" \"}\n            </div>\n            <div className=\"skill-row\">\n              {job.skills.map((skill, index) => {\n                return <span className=\"skill-tag\">{skill}</span>;\n              })}\n            </div>\n            <div className=\"ctc-row\">\n              CTC: {job.ctc_min}\n              {job.ctc_max !== \"\" ? \" - \" + job.ctc_max : \"\"}\n            </div>\n          </Jumbotron>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div className=\"activity-add\">\n            <Button\n              variant=\"success\"\n              className=\"float-right\"\n              onClick={() => activityModal.current.showModal(null)}\n            >\n              <FontAwesomeIcon icon={faPlus} /> New Activity\n            </Button>\n            <Button\n              as={Link}\n              variant=\"warning\"\n              className=\"float-right mr-3\"\n              to={`/job-edit/${job._id}`}\n\n            >\n              <FontAwesomeIcon icon={faEdit} /> Edit\n            </Button>\n            <ActivityModal job={job} ref={activityModal} parentCallback={parentCallback}/>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col className=\"activity-list\">\n          {job.activities.map((activity, index) => {\n            return (\n              <React.Fragment key={index}>\n                <div className=\"activity-box\" >\n                  <div className=\"activity-buttons\">\n                    <Button variant=\"danger\" size=\"sm\" onClick={()=>{ deleteActivity(activity)}}>\n                      <FontAwesomeIcon icon={faTrash} />\n                    </Button>\n                    {\"  \"}\n                    <Button\n                      variant=\"warning\"\n                      size=\"sm\"\n                      onClick={() => activityModal.current.showModal(activity)}\n                    >\n                      <FontAwesomeIcon icon={faEdit} />\n                    </Button>\n                  </div>\n                  <div className=\"activity-head\">\n                    {`${new Date(\n                      activity.stamp\n                    ).toLocaleDateString()} ${new Date(\n                      activity.stamp\n                    ).toLocaleTimeString()}`}{\" \"}\n                    <ReactTimeAgo\n                      date={new Date(activity.stamp)}\n                      locale=\"en-US\"\n                    />\n                  </div>\n                  <div className=\"activity-body\">{activity.body}</div>\n                </div>\n              </React.Fragment>\n            );\n          })}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\nexport default Job;\n","import React, { Fragment, useState } from \"react\";\nimport {\n  Button,\n  Col,\n  Container,\n  Form,\n  FormControl,\n  FormGroup,\n  FormLabel,\n  Jumbotron,\n  Row,\n} from \"react-bootstrap\";\nimport Api from \"../config/Api\";\n\nconst Login = (props) => {\n    const [lEmail,setLoginEmail]=useState(\"\");\n    const [lPassword,setLoginPassword]=useState(\"\");\n    \n    const [nName,setNewName]=useState(\"\");\n    const [nEmail,setNewEmail]=useState(\"\");\n    const [nPassword,setNewPassword]=useState(\"\");\n    const [nPassword2,setNewPassword2]=useState(\"\");\n    \n    const parentCheckLogin=props.parentCheckLogin;\n    const checkLogin=()=>{\n        let body={};\n        body.email=lEmail;\n        body.password=lPassword;\n        Api.login(body,(resp)=>{\n            if(resp.status){\n                startSession(resp.data);\n            }else{\n                alert(resp.message);\n            }\n        });\n    };\n    const signup=()=>{\n        let body={};\n        body.name=nName;\n        body.email=nEmail;\n        body.password=nPassword;\n        Api.signup(body,(resp)=>{\n            if(resp.status){\n                startSession(resp.data);\n            }else{\n                alert(resp.message);\n            }\n        });\n    };\n    const startSession=(data)=>{\n        localStorage.setItem(\"token\",data.token);\n        localStorage.setItem(\"data\",JSON.stringify(data.user));\n        parentCheckLogin();\n    };\n  return (\n    <Fragment>\n      <Container>\n        <Jumbotron>\n          <h2>Track Interview</h2>\n        </Jumbotron>\n        <br/>\n        <Row>\n          <Col>\n            <Form>\n              <center>\n                <h3>Login</h3>\n              </center>\n              <FormGroup>\n                <FormLabel>Email</FormLabel>\n                <FormControl type=\"text\" placeholder=\"Enter Email address\" value={lEmail} onChange={(e)=>setLoginEmail(e.target.value)}/>\n              </FormGroup>\n              <FormGroup>\n                <FormLabel>Password</FormLabel>\n                <FormControl type=\"password\" placeholder=\"Enter Password\"  value={lPassword} onChange={(e)=>setLoginPassword(e.target.value)}/>\n              </FormGroup>\n              <Button onClick={()=>checkLogin()}>Login</Button>\n            </Form>\n          </Col>\n          <Col>\n            <Form>\n              <center>\n                <h3>Signup</h3>\n              </center>\n              <FormGroup>\n                <FormLabel>Name</FormLabel>\n                <FormControl type=\"text\" placeholder=\"Enter Name\" value={nName} onChange={(e)=>setNewName(e.target.value)}/>\n              </FormGroup>\n              <FormGroup>\n                <FormLabel>Email</FormLabel>\n                <FormControl type=\"text\" placeholder=\"Enter Email address\" value={nEmail} onChange={(e)=>setNewEmail(e.target.value)}/>\n              </FormGroup>\n              <FormGroup>\n                <FormLabel>Password</FormLabel>\n                <FormControl type=\"password\" placeholder=\"Enter Password\" value={nPassword} onChange={(e)=>setNewPassword(e.target.value)}/>\n              </FormGroup>\n              <FormGroup>\n                <FormLabel>Confirm Password</FormLabel>\n                <FormControl type=\"password\" placeholder=\"Confirm Password\" value={nPassword2} onChange={(e)=>setNewPassword2(e.target.value)}/>\n              </FormGroup>\n              <Button onClick={()=>signup()}>Signup</Button>\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n    </Fragment>\n  );\n};\n\nexport default Login;\n","import \"./App.css\";\nimport React, { useState } from \"react\";\nimport { Nav, Navbar, NavbarBrand, NavLink } from \"react-bootstrap\";\nimport NavbarToggle from \"react-bootstrap/esm/NavbarToggle\";\nimport NavbarCollapse from \"react-bootstrap/esm/NavbarCollapse\";\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\n\nimport Home from './components/Home';\nimport Dashboard from './components/Dashboard';\nimport JobCMS from './components/JobCMS';\nimport Job from \"./components/Job\";\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nimport Login from \"./components/Login\";\n\nTimeAgo.addDefaultLocale(en);\nTimeAgo.addLocale(en);\n\nfunction App() {\n  const isLoggedIn=()=>{\n    return localStorage.getItem(\"token\")||false;\n  };\n  const [isLogged,setIsLogged]=useState(isLoggedIn());\n  \n  const checkLogin=()=>{\n    setIsLogged(isLoggedIn());\n  };\n  const logout=()=>{\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"data\");\n    checkLogin();\n  };\n  if(!isLogged){\n    return (<Login parentCheckLogin={checkLogin}/>);\n  }else\n    return (\n    <Router>\n      <Navbar>\n        <NavbarBrand>Track Interview</NavbarBrand>\n        <NavbarToggle aria-controls=\"nav\" />\n        <NavbarCollapse id=\"nav\">\n          <Nav className=\"mr-auto\">\n            <NavLink as={Link} to=\"/\">\n              Home\n            </NavLink>\n            <NavLink as={Link} to=\"/dashboard\">\n              Dashboard\n            </NavLink>\n            <NavLink onClick={()=>logout()}>Logout</NavLink>\n          </Nav>\n        </NavbarCollapse>\n      </Navbar>\n      <Switch>\n        <Route path=\"/dashboard\">\n          <Dashboard/>\n        </Route>\n        <Route path=\"/job-add\">\n          <JobCMS/>\n        </Route>\n        <Route path=\"/job-edit/:job_id\">\n          <JobCMS/>\n        </Route>\n        <Route path=\"/job/:job_id\">\n          <Job/>\n        </Route>\n        <Route path=\"/\">\n          <Home/>\n        </Route>\n        \n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Container } from \"react-bootstrap\";\nReactDOM.render(\n    <Container>\n      <App />\n    </Container>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}