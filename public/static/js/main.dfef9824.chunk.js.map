{"version":3,"sources":["config/Api.js","components/Home.js","components/Dashboard.js","components/JobCMS.js","components/ActivityModal.js","components/Job.js","components/Login.js","App.js","index.js"],"names":["Api","process","headers","token","localStorage","getItem","Authorization","body","callback","obj","method","JSON","stringify","fetch","BASE","then","response","json","err","status","message","error","params","job_id","Home","props","useState","parse","user","stats","setStats","jobStatus","Map","set","useEffect","getJobStats","data","logout","Container","name","map","className","to","_id","get","count","Dashboard","jobs","setJobs","job_status","useParams","filter","getMyJobs","Button","as","Link","variant","Table","striped","bordered","hover","job","index","company","date","Date","updated","locale","onClick","e","window","confirm","deleteJob","newJobs","JobCMS","history","useHistory","setName","setCompany","jobURL","setJobURL","reviewURL","setReviewURL","linkedinURL","setLinkedinURL","source","setSource","skills","setSkills","location","setLocation","minCTC","setMinCTC","maxCTC","setMaxCTC","notes","setNotes","HRName","setHRName","HREmail","setHREmail","HRPhone","setHRPhone","appliedDate","setAppliedDate","setStatus","msg","alert","setAlert","getJobDetails","console","log","job_url","review_url","linkedin_url","ctc_min","ctc_max","hr","email","phone","applied","undefined","Form","Row","Col","FormGroup","FormLabel","FormControl","type","placeholder","value","onChange","target","selected","dt","join","split","rows","sts","toString","editJob","goBack","newJob","submitForm","Alert","show","dismissible","onClose","ActivityModal","forwardRef","ref","blankActivity","is_schedule","schedule_date","schedule_done","setShow","isEdit","setISEdit","activity","setActivity","useImperativeHandle","showModal","oldAct","Modal","onHide","ModalHeader","ModalTitle","ModalBody","InputGroup","Prepend","Checkbox","checked","ModalFooter","activity_id","editActivity","resp","parentCallback","newActivity","Job","activities","setJob","activityModal","useRef","Jumbotron","href","icon","faExternalLinkSquareAlt","faLinkedin","faStar","skill","current","faPlus","faEdit","Fragment","size","deleteActivity","newActivities","faTrash","stamp","toLocaleDateString","toLocaleTimeString","Login","lEmail","setLoginEmail","lPassword","setLoginPassword","nName","setNewName","nEmail","setNewEmail","nPassword","setNewPassword","nPassword2","setNewPassword2","parentCheckLogin","startSession","setItem","password","login","checkLogin","signup","TimeAgo","addDefaultLocale","en","addLocale","App","isLoggedIn","isLogged","setIsLogged","removeItem","Navbar","NavbarBrand","NavbarToggle","aria-controls","NavbarCollapse","id","Nav","NavLink","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dfef9824.chunk.js","sourcesContent":["const Api={};\nApi.BASE=process.env.REACT_APP_API_URL;\n\nApi.headers=()=>{\n    var headers={'Content-Type':'application/json'};\n    var token=localStorage.getItem(\"token\")||false;\n    if(token){\n        headers.Authorization=\"Bearer \"+token;\n    }\n    return headers;\n}\nApi.login=(body,callback)=>{\n    try{\n        var obj={};\n        obj.headers=Api.headers();\n        obj.method=\"POST\";\n        obj.body=JSON.stringify(body);\n        fetch(Api.BASE+\"/api/login\",obj)\n            .then(response=> response.json())\n            .then(json=>callback(json));\n    }\n    catch(err){\n        callback({status:false,message:\"Failed to validate user\",error:err});\n    }\n};\nApi.signup=(body,callback)=>{\n    try{\n        var obj={};\n        obj.headers=Api.headers();\n        obj.method=\"POST\";\n        obj.body=JSON.stringify(body);\n        fetch(Api.BASE+\"/api/signup\",obj)\n            .then(response=> response.json())\n            .then(json=>callback(json));\n    }\n    catch(err){\n        callback({status:false,message:\"Failed to register new user\",error:err});\n    }\n};\nApi.getJobStats=(callback)=>{\n    try{\n        var obj={};\n        obj.headers=Api.headers();\n        obj.method=\"GET\";\n        fetch(Api.BASE+\"/api/jobs/stats\",obj)\n            .then(response=> response.json())\n            .then(json=>callback(json));\n    }\n    catch(err){\n        callback({status:false,message:\"Failed to get Job stats\",error:err});\n    }\n}\nApi.getMyJobs=(params,callback)=>{\n    try{\n        var obj={};\n        obj.headers=Api.headers();\n        obj.method=\"POST\";\n        obj.body=JSON.stringify(params);\n        fetch(Api.BASE+\"/api/jobs\",obj)\n            .then(response=> response.json())\n            .then(json=>callback(json));\n    }\n    catch(err){\n        callback({status:false,message:\"Failed to get Jobs\",error:err});\n    }\n}\nApi.getJobDetails=(job_id,callback)=>{\n    try{\n        var obj={};\n        obj.headers=Api.headers();\n        obj.method=\"GET\";\n        fetch(`${Api.BASE}/api/jobs/${job_id}`,obj)\n            .then(response=> response.json())\n            .then(json=>callback(json));\n    }\n    catch(err){\n        callback({status:false,message:\"Failed to get job details\",error:err});\n    }\n}\n\nApi.newJob=(body,callback)=>{\n    try{\n        var obj={};\n        obj.headers=Api.headers();\n        obj.method=\"POST\";\n        obj.body=JSON.stringify(body);\n        fetch(Api.BASE+\"/api/jobs\",obj)\n            .then(response=> response.json())\n            .then(json=>callback(json));\n    }\n    catch(err){\n        callback({status:false,message:\"Failed to add Job\",error:err});\n    }\n}\nApi.editJob=(body,callback)=>{\n    try{\n        var obj={};\n        obj.headers=Api.headers();\n        obj.method=\"PUT\";\n        obj.body=JSON.stringify(body);\n        fetch(Api.BASE+\"/api/jobs\",obj)\n            .then(response=> response.json())\n            .then(json=>callback(json));\n    }\n    catch(err){\n        callback({status:false,message:\"Failed to edit Job\",error:err});\n    }\n}\nApi.deleteJob=(body,callback)=>{\n    try{\n        var obj={};\n        obj.headers=Api.headers();\n        obj.method=\"DELETE\";\n        obj.body=JSON.stringify(body);\n        fetch(Api.BASE+\"/api/jobs\",obj)\n            .then(response=> response.json())\n            .then(json=>callback(json));\n    }\n    catch(err){\n        callback({status:false,message:\"Failed to delete Job\",error:err});\n    }\n}\nApi.newActivity=(body,callback)=>{\n    try{\n        var obj={};\n        obj.headers=Api.headers();\n        obj.method=\"POST\";\n        obj.body=JSON.stringify(body);\n        fetch(Api.BASE+\"/api/activities\",obj)\n            .then(response=> response.json())\n            .then(json=>callback(json));\n    }\n    catch(err){\n        callback({status:false,message:\"Failed to add activity\",error:err});\n    }\n}\nApi.editActivity=(body,callback)=>{\n    try{\n        var obj={};\n        obj.headers=Api.headers();\n        obj.method=\"PUT\";\n        obj.body=JSON.stringify(body);\n        fetch(Api.BASE+\"/api/activities\",obj)\n            .then(response=> response.json())\n            .then(json=>callback(json));\n    }\n    catch(err){\n        callback({status:false,message:\"Failed to edit activity\",error:err});\n    }\n}\nApi.deleteActivity=(body,callback)=>{\n    try{\n        var obj={};\n        obj.headers=Api.headers();\n        obj.method=\"DELETE\";\n        obj.body=JSON.stringify(body);\n        fetch(Api.BASE+\"/api/activities\",obj)\n            .then(response=> response.json())\n            .then(json=>callback(json));\n    }\n    catch(err){\n        callback({status:false,message:\"Failed to delete activity\",error:err});\n    }\n}\nexport default Api;","import React, { useEffect, useState } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Api from \"../config/Api\";\n\nconst Home = (props) => {\n  const [user,setUser]=useState(JSON.parse(localStorage.getItem(\"data\")||\"{}\"));\n  const [stats,setStats]=useState([]);\n\n  const jobStatus=new Map();\n  jobStatus.set(\"interviewing\",\"Interviewing\");\n  jobStatus.set(\"response\",\"Got Response\");\n  jobStatus.set(\"applied\",\"Applied\");\n  jobStatus.set(\"waiting\",\"Waiting\");\n  jobStatus.set(\"rejected\",\"Got Rejected\");\n  jobStatus.set(\"offer_recieved\",\"Offer Received\");\n  jobStatus.set(\"decline\",\"Declined Offer\");\n  jobStatus.set(\"pending\",\"Pending\");\n\n  var getStats=()=>{\n    Api.getJobStats((data)=>{\n      if(data.status){\n        setStats(data.data);\n      }else{\n          //token expired - let's logout. So user can login again.\n          props.logout();\n      }\n    });\n  };\n  useEffect(()=>{\n    getStats();\n  },[]);\n  return (\n    <Container>\n      <h3>Hi {user.name}!</h3>\n      Welcome to Track Interview App!\n\n      {stats.map((status)=>{\n        return <Link className=\"quick-links\" to={`/dashboard/${status._id}`}> {jobStatus.get(status._id)} ({status.count})</Link>\n      })}\n    </Container>\n  );\n};\n\nexport default Home;\n","import React,{useEffect,useState} from 'react';\nimport { Button, Container, Table } from 'react-bootstrap';\nimport { Link, useParams } from 'react-router-dom';\nimport ReactTimeAgo from 'react-time-ago/commonjs/ReactTimeAgo';\n\nimport Api from '../config/Api';\n\nconst Dashboard = (props)=>{\n    var [jobs,setJobs]=useState([]);\n    var {job_status}= useParams();\n    const getMyJobs=()=>{\n        let params={};\n        if(job_status){\n            params.filter={status:job_status};\n        }\n        Api.getMyJobs(params,(data)=>{\n            if(data.status){\n                setJobs(data.data);\n            }else{\n                //token expired - let's logout. So user can login again.\n                props.logout();\n            }\n        });\n    };\n    \n    const deleteJob=(job)=>{\n        if(window.confirm(`Do you want to delete job \"${job.name} - ${job.company}?`)){\n            var params={};\n            params.job_id=job._id;\n            Api.deleteJob(params,(data)=>{\n                if(data.status){\n                    var newJobs=jobs.filter((e)=>{\n                        return e._id!==job._id\n                    });\n                    setJobs(newJobs);\n                }\n            });\n        }\n    }\n    useEffect(()=>{\n        getMyJobs();\n    },[]);\n    return (\n        <div>\n            <Container>\n                <Button as={Link} to=\"/job-add\" variant=\"outline-primary\" className=\"float-right\">[+] New Job</Button>\n                <h3>Dashboard</h3>\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <td>Sr#</td>\n                            <td>Position</td>\n                            <td>Company</td>\n                            <td>Status</td>\n                            <td>Updated</td>\n                            <td>Action</td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {jobs.map((job,index)=>{\n                        return (<tr key={job._id}>\n                            <td>{index+1}</td>\n                            <td><Link to={`/job/${job._id}`}>{job.name}</Link></td>\n                            <td>{job.company}</td>\n                            <td>{job.status}</td>\n                            <td><ReactTimeAgo date={new Date(job.updated)} locale=\"en-US\" /></td>\n                            <td><Button as={Link} to={`/job-edit/${job._id}`}>Edit</Button> <Button variant=\"danger\" onClick={(e)=>deleteJob(job)}>Delete</Button></td>\n                        </tr>);\n                    })}\n                    </tbody>\n                </Table>\n            </Container>\n        </div>\n    );\n}\n\nexport default Dashboard;","import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  Col,\n  Container,\n  Form,\n  FormControl,\n  FormGroup,\n  FormLabel,\n  Row,\n  Alert,\n} from \"react-bootstrap\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport ReactDatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport Api from \"../config/Api\";\n\nconst JobCMS = () => {\n  const history = useHistory();\n  var { job_id } = useParams();\n  const [name, setName] = useState(\"\");\n  const [company, setCompany] = useState(\"\");\n  const [jobURL, setJobURL] = useState(\"\");\n  const [reviewURL, setReviewURL] = useState(\"\");\n  const [linkedinURL, setLinkedinURL] = useState(\"\");\n  const [source, setSource] = useState(\"\");\n  const [skills, setSkills] = useState([]);\n  const [location, setLocation] = useState(\"\");\n  const [minCTC, setMinCTC] = useState(0);\n  const [maxCTC, setMaxCTC] = useState(0);\n  const [notes, setNotes] = useState(\"\");\n  const [HRName, setHRName] = useState(\"\");\n  const [HREmail, setHREmail] = useState(\"\");\n  const [HRPhone, setHRPhone] = useState(\"\");\n  const [appliedDate, setAppliedDate] = useState(new Date());\n  const [status,setStatus]=useState(\"applied\");\n\n  const [alert, setAlert] = useState({ msg: \"\", variant: \"\" });\n\n  var submitForm = (e) => {\n    var body = {};\n    body.name = name;\n    body.company = company;\n    body.job_url = jobURL;\n    body.review_url = reviewURL;\n    body.linkedin_url = linkedinURL;\n    body.source = source;\n    body.skills = skills;\n    body.location = location;\n    body.ctc_min = minCTC;\n    body.ctc_max = maxCTC;\n    body.notes = notes;\n    body.hr = { name: HRName, email: HREmail, phone: HRPhone };\n    if(appliedDate===\"\" || appliedDate===undefined|| appliedDate===null){\n      body.applied = null;\n    }else{\n      body.applied = appliedDate.toString();\n    }\n    body.status=status;\n    if (job_id) {\n      body.job_id = job_id;\n      Api.editJob(body, (response) => {\n        if (response.status) {\n          setAlert({ msg: response.message, variant: \"success\" });\n          history.goBack();\n        } else {\n          setAlert({ msg: response.message, variant: \"danger\" });\n        }\n      });\n    } else {\n      Api.newJob(body, (response) => {\n        if (response.status) {\n          setAlert({ msg: response.message, variant: \"success\" });\n          history.goBack();\n        } else {\n          setAlert({ msg: response.message, variant: \"danger\" });\n        }\n      });\n    }\n  };\n  ///if job_id is present, get job details for EDIT form.\n  useEffect(() => {\n    if (job_id) {\n      Api.getJobDetails(job_id, (response) => {\n        console.log(response);\n        if (response.status) {\n          var { data } = response;\n          setName(data.name);\n          setCompany(data.company);\n          setJobURL(data.job_url);\n          setReviewURL(data.review_url);\n          setLinkedinURL(data.linkedin_url);\n          setSource(data.source);\n          setSkills(data.skills);\n          setLocation(data.location);\n          setMinCTC(data.ctc_min);\n          setMaxCTC(data.ctc_max);\n          setNotes(data.notes);\n          setHRName(data.hr.name);\n          setHREmail(data.hr.email);\n          setHRPhone(data.hr.phone);\n          setAppliedDate(new Date(data.applied));\n          setStatus(data.status);\n        } else {\n          console.error(\"Job not found.\");\n          job_id = undefined;\n        }\n      });\n    }\n  }, []);\n  const arrStatus=[\"pending\",\"applied\",\"response\",\"interviewing\",\"waiting\",\"rejected\",\"offer_recieved\",\"decline\"];\n  return (\n    <Container>\n      <h3>{job_id === undefined ? \"Create New Job\" : \"Edit Job details\"}</h3>\n      <Form>\n        <Row>\n          <Col>\n            <FormGroup>\n              <FormLabel>Job Position</FormLabel>\n              <FormControl\n                type=\"text\"\n                placeholder=\"Enter Job Position\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              />\n            </FormGroup>\n          </Col>\n          <Col>\n            <Row>\n              <Col>\n                <FormGroup>\n                  <FormLabel>Company</FormLabel>\n                  <FormControl\n                    type=\"text\"\n                    placeholder=\"Enter Company Name\"\n                    value={company}\n                    onChange={(e) => setCompany(e.target.value)}\n                  />\n                </FormGroup>\n              </Col>\n              <Col>\n                <FormGroup>\n                  <FormLabel>Applied On</FormLabel>\n                  <ReactDatePicker\n                    as={FormControl}\n                    selected={appliedDate}\n                    onChange={(dt) =>\n                      setAppliedDate(dt)\n                    }\n                  />\n                </FormGroup>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <FormGroup>\n              <FormLabel>Job URL</FormLabel>\n              <FormControl\n                type=\"url\"\n                placeholder=\"Enter Job URL\"\n                value={jobURL}\n                onChange={(e) => setJobURL(e.target.value)}\n              />\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <FormLabel>LinkedIn URL</FormLabel>\n              <FormControl\n                type=\"text\"\n                placeholder=\"Enter LinkedIn URL\"\n                value={linkedinURL}\n                onChange={(e) => setLinkedinURL(e.target.value)}\n              />\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <FormLabel>\n                Review URL <small>(eg. Glassdoor)</small>\n              </FormLabel>\n              <FormControl\n                type=\"url\"\n                placeholder=\"Enter Review URL\"\n                value={reviewURL}\n                onChange={(e) => setReviewURL(e.target.value)}\n              />\n            </FormGroup>\n          </Col>\n\n          <Col>\n            <FormGroup>\n              <FormLabel>Source</FormLabel>\n              <FormControl\n                type=\"text\"\n                placeholder=\"Enter Job Source\"\n                value={source}\n                onChange={(e) => setSource(e.target.value)}\n              />\n            </FormGroup>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <FormGroup>\n              <FormLabel>Skills</FormLabel>\n              <FormControl\n                type=\"text\"\n                placeholder=\"Skills needed for this job\"\n                value={skills.join(\",\")}\n                onChange={(e) => setSkills(e.target.value.split(\",\"))}\n              />\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <FormLabel>Job Location</FormLabel>\n              <FormControl\n                type=\"text\"\n                placeholder=\"Enter Job Location\"\n                value={location}\n                onChange={(e) => setLocation(e.target.value)}\n              />\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <FormLabel>Minimum CTC</FormLabel>\n              <FormControl\n                type=\"text\"\n                placeholder=\"Minimum CTC\"\n                value={minCTC}\n                onChange={(e) => setMinCTC(e.target.value)}\n              />\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <FormLabel>Maximum CTC</FormLabel>\n              <FormControl\n                type=\"text\"\n                placeholder=\"Maximum CTC\"\n                value={maxCTC}\n                onChange={(e) => setMaxCTC(e.target.value)}\n              />\n            </FormGroup>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <FormGroup>\n              <FormLabel>Notes</FormLabel>\n              <FormControl\n                as=\"textarea\"\n                rows=\"3\"\n                placeholder=\"Notes about this Job\"\n                value={notes}\n                onChange={(e) => setNotes(e.target.value)}\n              />\n            </FormGroup>\n          </Col>\n          <Col>\n            <div>HR Contact</div>\n            <Row>\n              <Col>\n                <FormGroup>\n                  <FormControl\n                    type=\"text\"\n                    placeholder=\"HR Name\"\n                    value={HRName}\n                    onChange={(e) => setHRName(e.target.value)}\n                  />\n                </FormGroup>\n              </Col>\n              <Col>\n                <FormGroup>\n                  <FormControl\n                    type=\"email\"\n                    placeholder=\"HR Email Address\"\n                    value={HREmail}\n                    onChange={(e) => setHREmail(e.target.value)}\n                  />\n                </FormGroup>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <FormGroup>\n                  <FormControl\n                    type=\"tel\"\n                    placeholder=\"HR Phone Number\"\n                    value={HRPhone}\n                    onChange={(e) => setHRPhone(e.target.value)}\n                  />\n                </FormGroup>\n              </Col>\n              <Col>\n              <FormGroup>\n                <FormControl as=\"select\" onChange={(e) => setStatus(e.target.value)}>{arrStatus.map((sts,index)=>{\n                  return <option key={`x${index}`} value={sts} selected={sts===status}>{sts}</option>;\n                })}</FormControl>\n              </FormGroup>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Button\n              variant=\"primary\"\n              className=\"mr-3\"\n              onClick={(e) => submitForm(e)}\n            >\n              Save\n            </Button>\n            <Button variant=\"secondary\" onClick={() => history.goBack()}>\n              Cancel\n            </Button>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <br />\n            <Alert\n              show={alert.msg !== \"\"}\n              variant={alert.variant}\n              dismissible\n              onClose={() => setAlert({ msg: \"\", variant: \"\" })}\n            >\n              {alert.msg}\n            </Alert>\n          </Col>\n        </Row>\n      </Form>\n    </Container>\n  );\n};\n\nexport default JobCMS;\n","import React, { forwardRef, useImperativeHandle, useState } from \"react\";\nimport {\n  Button,\n  Form,\n  FormControl,\n  FormGroup,\n  FormLabel,\n  InputGroup,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalTitle,\n} from \"react-bootstrap\";\nimport ModalHeader from \"react-bootstrap/esm/ModalHeader\";\nimport ReactDatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Api from \"../config/Api\";\n\nconst ActivityModal = forwardRef((props, ref) => {\n  const blankActivity = {\n    body: \"\",\n    is_schedule: false,\n    schedule_date: new Date(),\n    schedule_done: false,\n  };\n\n  const [show, setShow] = useState(false);\n  const [isEdit, setISEdit] = useState(false);\n  const [activity, setActivity] = useState(blankActivity);\n  const [date, setDate] = useState(new Date());\n\n  const job = props.job;\n  useImperativeHandle(ref, () => {\n    return {\n      showModal: (oldAct) => {\n        setShow(true);\n        if (oldAct == null) {\n          setISEdit(false);\n          setActivity(blankActivity);\n        } else {\n          setISEdit(true);\n          oldAct.schedule_date = new Date(oldAct.schedule_date);\n          if (oldAct.is_schedule) {\n            oldAct.is_schedule = true;\n          } else {\n            oldAct.is_schedule = false;\n          }\n          if (oldAct.schedule_done) {\n            oldAct.schedule_done = true;\n          } else {\n            oldAct.schedule_done = false;\n          }\n          setActivity(oldAct);\n        }\n      },\n    };\n  });\n  const submitForm = () => {\n    var body = {};\n    body.job_id = job._id;\n    body.body = activity.body;\n    body.is_schedule = activity.is_schedule;\n    body.schedule_date = activity.schedule_date;\n    body.schedule_done = activity.schedule_done;\n    if (isEdit) {\n      body.activity_id = activity._id;\n      Api.editActivity(body, (resp) => {\n        if(resp.status){\n          setShow(false);\n          props.parentCallback();\n        }\n      });\n    } else {\n      Api.newActivity(body, (resp) => {\n        if(resp.status){\n          setShow(false);\n          props.parentCallback();\n        }\n      });\n    }\n  };\n  return (\n    <Modal show={show} onHide={() => {}}>\n      <ModalHeader>\n        <ModalTitle>{isEdit ? \"Edit Activity\" : \"New Activity\"}</ModalTitle>\n      </ModalHeader>\n      <ModalBody>\n        <Form>\n          <FormGroup>\n            <FormLabel>Description</FormLabel>\n            <FormControl\n              type=\"text\"\n              placeholder=\"Description\"\n              value={activity.body}\n              onChange={(e) =>\n                setActivity({ ...activity, body: e.target.value })\n              }\n            ></FormControl>\n          </FormGroup>\n          <FormLabel>Set Reminder</FormLabel>\n          <InputGroup>\n            <InputGroup.Prepend>\n              <InputGroup.Checkbox\n                checked={activity.is_schedule}\n                onChange={(e) =>\n                  setActivity({\n                    ...activity,\n                    is_schedule: !activity.is_schedule,\n                  })\n                }\n              />\n            </InputGroup.Prepend>\n            <ReactDatePicker\n              as={FormControl}\n              selected={activity.schedule_date}\n              onChange={(dt) =>\n                setActivity({ ...activity, schedule_date: new Date(dt) })\n              }\n            />\n          </InputGroup>\n        </Form>\n      </ModalBody>\n      <ModalFooter>\n        <Button variant=\"primary\" onClick={submitForm}>\n          Save\n        </Button>\n        <Button\n          variant=\"secondary\"\n          onClick={() => {\n            setShow(false);\n            props.parentCallback();\n          }}\n        >\n          Cancel\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n});\n\nexport default ActivityModal;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Container, Row, Col, Jumbotron, Button, Modal } from \"react-bootstrap\";\nimport { useParams,Link } from \"react-router-dom\";\nimport Api from \"../config/Api\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLinkedin } from \"@fortawesome/free-brands-svg-icons\";\nimport {\n  faEdit,\n  faExternalLinkSquareAlt,\n  faPlus,\n  faStar,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport ReactTimeAgo from \"react-time-ago\";\nimport ActivityModal from \"./ActivityModal\";\n\nconst Job = () => {\n  const { job_id } = useParams();\n  const [job, setJob] = useState({ skills: [], activities: [] });\n  const activityModal = useRef();\n\n  const getJobDetails = () => {\n    Api.getJobDetails(job_id, (resp) => {\n      if (resp.status) {\n        setJob(resp.data);\n      }\n    });\n  };\n\n  useEffect(() => {\n    getJobDetails();\n  }, []);\n  const parentCallback=()=>{\n    getJobDetails();\n  };\n  const deleteActivity=(activity)=>{\n    if(window.confirm(\"Do you want to delete this activity?\")){\n      var params={};\n      params.activity_id=activity._id;\n      Api.deleteActivity(params,(data)=>{\n          if(data.status){\n              var newActivities=job.activities.filter((e)=>{\n                  return e._id!==activity._id\n              });\n              setJob({...job,activities:newActivities});\n          }\n      });\n    }\n  };\n  return (\n    <Container>\n      <hr />\n      <Row>\n        <Col>\n          <Jumbotron>\n            <h3 className=\"company-name\">\n              {job.company} <small>({job.location})</small>\n            </h3>\n            <div className=\"position-name\">\n              {job.name}{\" \"}\n              <small>\n                <a href={job.job_url} target=\"_new\">\n                  {job.source}{\" \"}\n                  <FontAwesomeIcon icon={faExternalLinkSquareAlt} />\n                </a>\n              </small>\n            </div>\n            <div className=\"icon-row\">\n              <a href={job.linkedin_url} target=\"_new\">\n                <FontAwesomeIcon icon={faLinkedin} /> LinkedIn\n              </a>{\" \"}\n              |{\" \"}\n              <a href={job.review_url} target=\"_new\">\n                <FontAwesomeIcon icon={faStar} /> Glassdoor Review\n              </a>{\" \"}\n            </div>\n            <div className=\"skill-row\">\n              {job.skills.map((skill, index) => {\n                return <span className=\"skill-tag\">{skill}</span>;\n              })}\n            </div>\n            <div className=\"ctc-row\">\n              CTC: {job.ctc_min}\n              {job.ctc_max !== \"\" ? \" - \" + job.ctc_max : \"\"}\n            </div>\n          </Jumbotron>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div className=\"activity-add\">\n            <Button\n              variant=\"success\"\n              className=\"float-right\"\n              onClick={() => activityModal.current.showModal(null)}\n            >\n              <FontAwesomeIcon icon={faPlus} /> New Activity\n            </Button>\n            <Button\n              as={Link}\n              variant=\"warning\"\n              className=\"float-right mr-3\"\n              to={`/job-edit/${job._id}`}\n\n            >\n              <FontAwesomeIcon icon={faEdit} /> Edit\n            </Button>\n            <ActivityModal job={job} ref={activityModal} parentCallback={parentCallback}/>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col className=\"activity-list\">\n          {job.activities.map((activity, index) => {\n            return (\n              <React.Fragment key={index}>\n                <div className=\"activity-box\" >\n                  <div className=\"activity-buttons\">\n                    <Button variant=\"danger\" size=\"sm\" onClick={()=>{ deleteActivity(activity)}}>\n                      <FontAwesomeIcon icon={faTrash} />\n                    </Button>\n                    {\"  \"}\n                    <Button\n                      variant=\"warning\"\n                      size=\"sm\"\n                      onClick={() => activityModal.current.showModal(activity)}\n                    >\n                      <FontAwesomeIcon icon={faEdit} />\n                    </Button>\n                  </div>\n                  <div className=\"activity-head\">\n                    {`${new Date(\n                      activity.stamp\n                    ).toLocaleDateString()} ${new Date(\n                      activity.stamp\n                    ).toLocaleTimeString()}`}{\" \"}\n                    <ReactTimeAgo\n                      date={new Date(activity.stamp)}\n                      locale=\"en-US\"\n                    />\n                  </div>\n                  <div className=\"activity-body\">{activity.body}</div>\n                </div>\n              </React.Fragment>\n            );\n          })}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\nexport default Job;\n","import React, { Fragment, useState } from \"react\";\nimport {\n  Button,\n  Col,\n  Container,\n  Form,\n  FormControl,\n  FormGroup,\n  FormLabel,\n  Jumbotron,\n  Row,\n} from \"react-bootstrap\";\nimport Api from \"../config/Api\";\n\nconst Login = (props) => {\n    const [lEmail,setLoginEmail]=useState(\"\");\n    const [lPassword,setLoginPassword]=useState(\"\");\n    \n    const [nName,setNewName]=useState(\"\");\n    const [nEmail,setNewEmail]=useState(\"\");\n    const [nPassword,setNewPassword]=useState(\"\");\n    const [nPassword2,setNewPassword2]=useState(\"\");\n    \n    const parentCheckLogin=props.parentCheckLogin;\n    const checkLogin=()=>{\n        let body={};\n        body.email=lEmail;\n        body.password=lPassword;\n        Api.login(body,(resp)=>{\n            if(resp.status){\n                startSession(resp.data);\n            }else{\n                alert(resp.message);\n            }\n        });\n    };\n    const signup=()=>{\n        let body={};\n        body.name=nName;\n        body.email=nEmail;\n        body.password=nPassword;\n        Api.signup(body,(resp)=>{\n            if(resp.status){\n                startSession(resp.data);\n            }else{\n                alert(resp.message);\n            }\n        });\n    };\n    const startSession=(data)=>{\n        localStorage.setItem(\"token\",data.token);\n        localStorage.setItem(\"data\",JSON.stringify(data.user));\n        parentCheckLogin();\n    };\n  return (\n    <Fragment>\n      <Container>\n        <Jumbotron>\n          <h2>Track Interview</h2>\n        </Jumbotron>\n        <br/>\n        <Row>\n          <Col>\n            <Form>\n              <center>\n                <h3>Login</h3>\n              </center>\n              <FormGroup>\n                <FormLabel>Email</FormLabel>\n                <FormControl type=\"text\" placeholder=\"Enter Email address\" value={lEmail} onChange={(e)=>setLoginEmail(e.target.value)}/>\n              </FormGroup>\n              <FormGroup>\n                <FormLabel>Password</FormLabel>\n                <FormControl type=\"password\" placeholder=\"Enter Password\"  value={lPassword} onChange={(e)=>setLoginPassword(e.target.value)}/>\n              </FormGroup>\n              <Button onClick={()=>checkLogin()}>Login</Button>\n            </Form>\n          </Col>\n          <Col>\n            <Form>\n              <center>\n                <h3>Signup</h3>\n              </center>\n              <FormGroup>\n                <FormLabel>Name</FormLabel>\n                <FormControl type=\"text\" placeholder=\"Enter Name\" value={nName} onChange={(e)=>setNewName(e.target.value)}/>\n              </FormGroup>\n              <FormGroup>\n                <FormLabel>Email</FormLabel>\n                <FormControl type=\"text\" placeholder=\"Enter Email address\" value={nEmail} onChange={(e)=>setNewEmail(e.target.value)}/>\n              </FormGroup>\n              <FormGroup>\n                <FormLabel>Password</FormLabel>\n                <FormControl type=\"password\" placeholder=\"Enter Password\" value={nPassword} onChange={(e)=>setNewPassword(e.target.value)}/>\n              </FormGroup>\n              <FormGroup>\n                <FormLabel>Confirm Password</FormLabel>\n                <FormControl type=\"password\" placeholder=\"Confirm Password\" value={nPassword2} onChange={(e)=>setNewPassword2(e.target.value)}/>\n              </FormGroup>\n              <Button onClick={()=>signup()}>Signup</Button>\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n    </Fragment>\n  );\n};\n\nexport default Login;\n","import \"./App.css\";\nimport React, { useState } from \"react\";\nimport { Nav, Navbar, NavbarBrand, NavLink } from \"react-bootstrap\";\nimport NavbarToggle from \"react-bootstrap/esm/NavbarToggle\";\nimport NavbarCollapse from \"react-bootstrap/esm/NavbarCollapse\";\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\n\nimport Home from './components/Home';\nimport Dashboard from './components/Dashboard';\nimport JobCMS from './components/JobCMS';\nimport Job from \"./components/Job\";\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nimport Login from \"./components/Login\";\n\nTimeAgo.addDefaultLocale(en);\nTimeAgo.addLocale(en);\n\nfunction App() {\n  const isLoggedIn=()=>{\n    return localStorage.getItem(\"token\")||false;\n  };\n  const [isLogged,setIsLogged]=useState(isLoggedIn());\n  \n  const checkLogin=()=>{\n    setIsLogged(isLoggedIn());\n  };\n  const logout=()=>{\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"data\");\n    checkLogin();\n  };\n  if(!isLogged){\n    return (<Login parentCheckLogin={checkLogin}/>);\n  }else\n    return (\n    <Router>\n      <Navbar>\n        <NavbarBrand>Track Interview</NavbarBrand>\n        <NavbarToggle aria-controls=\"nav\" />\n        <NavbarCollapse id=\"nav\">\n          <Nav className=\"mr-auto\">\n            <NavLink as={Link} to=\"/\">\n              Home\n            </NavLink>\n            <NavLink as={Link} to=\"/dashboard\">\n              Dashboard\n            </NavLink>\n            <NavLink onClick={()=>logout()}>Logout</NavLink>\n          </Nav>\n        </NavbarCollapse>\n      </Navbar>\n      <Switch>\n        <Route path=\"/dashboard/:job_status?\">\n          <Dashboard logout={logout}/>\n        </Route>\n        <Route path=\"/job-add\">\n          <JobCMS/>\n        </Route>\n        <Route path=\"/job-edit/:job_id\">\n          <JobCMS/>\n        </Route>\n        <Route path=\"/job/:job_id\">\n          <Job/>\n        </Route>\n        <Route path=\"/\">\n          <Home logout={logout}/>\n        </Route>\n        \n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Container } from \"react-bootstrap\";\nReactDOM.render(\n    <Container>\n      <App />\n    </Container>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}