{"version":3,"sources":["components/Home.js","config/Api.js","components/Dashboard.js","components/JobCMS.js","App.js","index.js"],"names":["Home","Container","Api","process","callback","obj","headers","method","fetch","BASE","then","response","json","err","status","message","error","body","JSON","stringify","Dashboard","useState","jobs","setJobs","useEffect","getMyJobs","data","console","log","Button","as","Link","to","variant","className","Table","striped","bordered","hover","map","job","index","name","company","applied","_id","JobCMS","props","setName","setCompany","jobURL","setJobURL","source","setSource","skills","setSkills","location","setLocation","minCTC","setMinCTC","maxCTC","setMaxCTC","notes","setNotes","HRName","setHRName","HREmail","setHREmail","HRPhone","setHRPhone","Form","Row","Col","FormGroup","FormLabel","FormControl","type","placeholder","value","onChange","e","target","join","split","rows","onClick","job_url","ctc_min","ctc_max","hr","email","phone","Date","toString","newJob","submitForm","App","Navbar","NavbarBrand","NavbarToggle","aria-controls","NavbarCollapse","id","Nav","NavLink","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85c151c6.chunk.js","sourcesContent":["import React from \"react\";\nimport { Container } from \"react-bootstrap\";\n\nconst Home = () => {\n  return (\n    <Container>\n      <h3>Track Interview</h3>\n      Welcome to Track Interview App\n    </Container>\n  );\n};\n\nexport default Home;\n","const Api={};\nApi.BASE=process.env.REACT_APP_API_URL;\n\nApi.headers=()=>{\n    var headers={'Content-Type':'application/json'};\n    return headers;\n}\nApi.getMyJobs=(callback)=>{\n    try{\n        var obj={};\n        obj.headers=Api.headers();\n        obj.method=\"GET\";\n        fetch(Api.BASE+\"/api/jobs\",obj)\n            .then(response=> response.json())\n            .then(json=>callback(json));\n    }\n    catch(err){\n        callback({status:false,message:\"Failed to get Jobs\",error:err});\n    }\n}\nApi.newJob=(body,callback)=>{\n    try{\n        var obj={};\n        obj.headers=Api.headers();\n        obj.method=\"POST\";\n        obj.body=JSON.stringify(body);\n        fetch(Api.BASE+\"/api/jobs\",obj)\n            .then(response=> response.json())\n            .then(json=>callback(json));\n    }\n    catch(err){\n        callback({status:false,message:\"Failed to add Job\",error:err});\n    }\n}\nexport default Api;","import React,{useEffect,useState} from 'react';\nimport { Button, Container, Table } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport Api from '../config/Api';\n\nconst Dashboard = ()=>{\n    var [jobs,setJobs]=useState([]);\n\n    const getMyJobs=()=>{\n        Api.getMyJobs((data)=>{\n            if(data.status){\n                console.log(data);\n                setJobs(data.data);\n            }else{\n                console.error(\"Failed to load My Jobs\");\n            }\n        });\n    };\n    useEffect(()=>{\n        getMyJobs();\n    },[]);\n    return (\n        <div>\n            <Container>\n                <Button as={Link} to=\"/job-add\" variant=\"outline-primary\" className=\"float-right\">[+] New Job</Button>\n                <h3>Dashboard</h3>\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <td>Sr#</td>\n                            <td>Position</td>\n                            <td>Company</td>\n                            <td>Status</td>\n                            <td>Applied</td>\n                            <td>Action</td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {jobs.map((job,index)=>{\n                        return (<tr key={job._id}>\n                            <td>{index+1}</td>\n                            <td>{job.name}</td>\n                            <td>{job.company}</td>\n                            <td>{job.status}</td>\n                            <td>{job.applied}</td>\n                            <td>View | Edit | Delete</td>\n                        </tr>);\n                    })}\n                    </tbody>\n                </Table>\n            </Container>\n        </div>\n    );\n}\n\nexport default Dashboard;","import React,{useState} from \"react\";\nimport {\n    Button,\n  Col,\n  Container,\n  Form,\n  FormControl,\n  FormGroup,\n  FormLabel,\n  Row,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Api from '../config/Api';\n\nconst JobCMS = (props) => {\n    const [name,setName]=useState(\"\");\n    const [company,setCompany]=useState(\"\");\n    const [jobURL,setJobURL]=useState(\"\");\n    const [source,setSource]=useState(\"\");\n    const [skills,setSkills]=useState([]);\n    const [location,setLocation]=useState(\"\");\n    const [minCTC,setMinCTC]=useState(0);\n    const [maxCTC,setMaxCTC]=useState(0);\n    const [notes,setNotes]=useState(\"\");\n    const [HRName,setHRName]=useState(\"\");\n    const [HREmail,setHREmail]=useState(\"\");\n    const [HRPhone,setHRPhone]=useState(\"\");\n\n    var submitForm=(e)=>{\n        var body={};\n        body.name=name;\n        body.company=company;\n        body.job_url=jobURL;\n        body.source=source;\n        body.skills=skills;\n        body.location=location;\n        body.ctc_min=minCTC;\n        body.ctc_max=maxCTC;\n        body.notes=notes;\n        body.hr={name:HRName,email:HREmail,phone:HRPhone};\n        body.applied=new Date().toString();\n        Api.newJob(body,(response)=>{\n            console.log(response);\n        });\n    }\n  return (\n    <Container>\n      <h3>Create New Job</h3>\n      <Form>\n        <Row>\n          <Col>\n            <FormGroup>\n              <FormLabel>Job Position</FormLabel>\n              <FormControl type=\"text\" placeholder=\"Enter Job Position\" value={name} onChange={e=>setName(e.target.value)}/>\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <FormLabel>Company</FormLabel>\n              <FormControl type=\"text\" placeholder=\"Enter Company Name\" value={company} onChange={e=>setCompany(e.target.value)}/>\n            </FormGroup>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <FormGroup>\n              <FormLabel>Job URL</FormLabel>\n              <FormControl type=\"url\" placeholder=\"Enter Job URL\" value={jobURL} onChange={e=>setJobURL(e.target.value)} />\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <FormLabel>Source</FormLabel>\n              <FormControl type=\"text\" placeholder=\"Enter Job Source\" value={source} onChange={e=>setSource(e.target.value)} />\n            </FormGroup>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <FormGroup>\n              <FormLabel>Skills</FormLabel>\n              <FormControl\n                type=\"text\"\n                placeholder=\"Skills needed for this job\"\n                value={skills.join(\",\")} onChange={e=>setSkills(e.target.value.split(\",\"))}\n              />\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <FormLabel>Job Location</FormLabel>\n              <FormControl type=\"text\" placeholder=\"Enter Job Location\"  value={location} onChange={e=>setLocation(e.target.value)}/>\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <FormLabel>Minimum CTC</FormLabel>\n              <FormControl type=\"text\" placeholder=\"Minimum CTC\"  value={minCTC} onChange={e=>setMinCTC(e.target.value)}/>\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <FormLabel>Maximum CTC</FormLabel>\n              <FormControl type=\"text\" placeholder=\"Maximum CTC\"  value={maxCTC} onChange={e=>setMaxCTC(e.target.value)}/>\n            </FormGroup>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <FormGroup>\n              <FormLabel>Notes</FormLabel>\n              <FormControl\n                as=\"textarea\"\n                rows=\"3\"\n                placeholder=\"Notes about this Job\"\n                value={notes} onChange={e=>setNotes(e.target.value)}\n              />\n            </FormGroup>\n          </Col>\n          <Col>\n            <div>HR Contact</div>\n            <Row>\n              <Col>\n                <FormGroup>\n                  <FormControl type=\"text\" placeholder=\"HR Name\"  value={HRName} onChange={e=>setHRName(e.target.value)}/>\n                </FormGroup>\n              </Col>\n              <Col>\n                <FormGroup>\n                  <FormControl type=\"email\" placeholder=\"HR Email Address\" value={HREmail} onChange={e=>setHREmail(e.target.value)} />\n                </FormGroup>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <FormGroup>\n                  <FormControl type=\"tel\" placeholder=\"HR Phone Number\" value={HRPhone} onChange={e=>setHRPhone(e.target.value)} />\n                </FormGroup>\n              </Col>\n              <Col></Col>\n            </Row>\n          </Col>\n        </Row>\n        <Row>\n            <Col>\n                <Button variant=\"primary\" className=\"mr-3\" onClick={e=> submitForm(e)}>Save</Button>\n                <Button variant=\"secondary\" as={Link} to=\"/dashboard\">Cancel</Button>\n            </Col>\n        </Row>\n      </Form>\n    </Container>\n  );\n};\n\nexport default JobCMS;\n","import \"./App.css\";\nimport React from \"react\";\nimport { Nav, Navbar, NavbarBrand, NavLink } from \"react-bootstrap\";\nimport NavbarToggle from \"react-bootstrap/esm/NavbarToggle\";\nimport NavbarCollapse from \"react-bootstrap/esm/NavbarCollapse\";\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\n\nimport Home from './components/Home';\nimport Dashboard from './components/Dashboard';\nimport JobCMS from './components/JobCMS';\n\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar>\n        <NavbarBrand>Track Interview</NavbarBrand>\n        <NavbarToggle aria-controls=\"nav\" />\n        <NavbarCollapse id=\"nav\">\n          <Nav className=\"mr-auto\">\n            <NavLink as={Link} to=\"/\">\n              Home\n            </NavLink>\n            <NavLink as={Link} to=\"/dashboard\">\n              Dashboard\n            </NavLink>\n          </Nav>\n        </NavbarCollapse>\n      </Navbar>\n      <Switch>\n        <Route path=\"/dashboard\">\n          <Dashboard/>\n        </Route>\n        <Route path=\"/job-add\">\n          <JobCMS/>\n        </Route>\n        <Route path=\"/\">\n          <Home/>\n        </Route>\n        \n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Container } from \"react-bootstrap\";\nReactDOM.render(\n  <React.StrictMode>\n    <Container>\n      <App />\n    </Container>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}