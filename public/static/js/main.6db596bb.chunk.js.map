{"version":3,"sources":["components/Home.js","config/Api.js","components/Dashboard.js","components/JobCMS.js","App.js","index.js"],"names":["Home","Container","Api","process","callback","obj","headers","method","fetch","BASE","then","response","json","err","status","message","error","job_id","body","JSON","stringify","Dashboard","useState","jobs","setJobs","useEffect","getMyJobs","data","console","Button","as","Link","to","variant","className","Table","striped","bordered","hover","map","job","index","_id","name","company","applied","onClick","e","window","confirm","params","deleteJob","newJobs","filter","JobCMS","history","useHistory","useParams","setName","setCompany","jobURL","setJobURL","source","setSource","skills","setSkills","location","setLocation","minCTC","setMinCTC","maxCTC","setMaxCTC","notes","setNotes","HRName","setHRName","HREmail","setHREmail","HRPhone","setHRPhone","msg","alert","setAlert","getJobDetails","log","job_url","ctc_min","ctc_max","hr","email","phone","undefined","Form","Row","Col","FormGroup","FormLabel","FormControl","type","placeholder","value","onChange","target","join","split","rows","Date","toString","editJob","goBack","newJob","submitForm","Alert","show","dismissible","onClose","App","Navbar","NavbarBrand","NavbarToggle","aria-controls","NavbarCollapse","id","Nav","NavLink","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6db596bb.chunk.js","sourcesContent":["import React from \"react\";\nimport { Container } from \"react-bootstrap\";\n\nconst Home = () => {\n  return (\n    <Container>\n      <h3>Track Interview</h3>\n      Welcome to Track Interview App\n    </Container>\n  );\n};\n\nexport default Home;\n","const Api={};\nApi.BASE=process.env.REACT_APP_API_URL;\n\nApi.headers=()=>{\n    var headers={'Content-Type':'application/json'};\n    return headers;\n}\nApi.getMyJobs=(callback)=>{\n    try{\n        var obj={};\n        obj.headers=Api.headers();\n        obj.method=\"GET\";\n        fetch(Api.BASE+\"/api/jobs\",obj)\n            .then(response=> response.json())\n            .then(json=>callback(json));\n    }\n    catch(err){\n        callback({status:false,message:\"Failed to get Jobs\",error:err});\n    }\n}\nApi.getJobDetails=(job_id,callback)=>{\n    try{\n        var obj={};\n        obj.headers=Api.headers();\n        obj.method=\"GET\";\n        fetch(`${Api.BASE}/api/jobs/${job_id}`,obj)\n            .then(response=> response.json())\n            .then(json=>callback(json));\n    }\n    catch(err){\n        callback({status:false,message:\"Failed to get job details\",error:err});\n    }\n}\n\nApi.newJob=(body,callback)=>{\n    try{\n        var obj={};\n        obj.headers=Api.headers();\n        obj.method=\"POST\";\n        obj.body=JSON.stringify(body);\n        fetch(Api.BASE+\"/api/jobs\",obj)\n            .then(response=> response.json())\n            .then(json=>callback(json));\n    }\n    catch(err){\n        callback({status:false,message:\"Failed to add Job\",error:err});\n    }\n}\nApi.editJob=(body,callback)=>{\n    try{\n        var obj={};\n        obj.headers=Api.headers();\n        obj.method=\"PUT\";\n        obj.body=JSON.stringify(body);\n        fetch(Api.BASE+\"/api/jobs\",obj)\n            .then(response=> response.json())\n            .then(json=>callback(json));\n    }\n    catch(err){\n        callback({status:false,message:\"Failed to edit Job\",error:err});\n    }\n}\nApi.deleteJob=(body,callback)=>{\n    try{\n        var obj={};\n        obj.headers=Api.headers();\n        obj.method=\"DELETE\";\n        obj.body=JSON.stringify(body);\n        fetch(Api.BASE+\"/api/jobs\",obj)\n            .then(response=> response.json())\n            .then(json=>callback(json));\n    }\n    catch(err){\n        callback({status:false,message:\"Failed to delete Job\",error:err});\n    }\n}\nexport default Api;","import React,{useEffect,useState} from 'react';\nimport { Button, Container, Table } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport Api from '../config/Api';\n\nconst Dashboard = ()=>{\n    var [jobs,setJobs]=useState([]);\n\n    const getMyJobs=()=>{\n        Api.getMyJobs((data)=>{\n            if(data.status){\n                //console.log(data);\n                setJobs(data.data);\n            }else{\n                console.error(\"Failed to load My Jobs\");\n            }\n        });\n    };\n    const deleteJob=(job)=>{\n        if(window.confirm(`Do you want to delete job \"${job.name} - ${job.company}?`)){\n            var params={};\n            params.job_id=job._id;\n            Api.deleteJob(params,(data)=>{\n                if(data.status){\n                    var newJobs=jobs.filter((e)=>{\n                        return e._id!==job._id\n                    });\n                    setJobs(newJobs);\n                }\n            });\n        }\n    }\n    useEffect(()=>{\n        getMyJobs();\n    },[]);\n    return (\n        <div>\n            <Container>\n                <Button as={Link} to=\"/job-add\" variant=\"outline-primary\" className=\"float-right\">[+] New Job</Button>\n                <h3>Dashboard</h3>\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <td>Sr#</td>\n                            <td>Position</td>\n                            <td>Company</td>\n                            <td>Status</td>\n                            <td>Applied</td>\n                            <td>Action</td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {jobs.map((job,index)=>{\n                        return (<tr key={job._id}>\n                            <td>{index+1}</td>\n                            <td><Link to={`/job/${job._id}`}>{job.name}</Link></td>\n                            <td>{job.company}</td>\n                            <td>{job.status}</td>\n                            <td>{job.applied}</td>\n                            <td><Button as={Link} to={`/job-edit/${job._id}`}>Edit</Button> <Button variant=\"danger\" onClick={(e)=>deleteJob(job)}>Delete</Button></td>\n                        </tr>);\n                    })}\n                    </tbody>\n                </Table>\n            </Container>\n        </div>\n    );\n}\n\nexport default Dashboard;","import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  Col,\n  Container,\n  Form,\n  FormControl,\n  FormGroup,\n  FormLabel,\n  Row,\n  Alert,\n} from \"react-bootstrap\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nimport Api from \"../config/Api\";\n\nconst JobCMS = () => {\n  const history = useHistory();\n  var { job_id } = useParams();\n  const [name, setName] = useState(\"\");\n  const [company, setCompany] = useState(\"\");\n  const [jobURL, setJobURL] = useState(\"\");\n  const [source, setSource] = useState(\"\");\n  const [skills, setSkills] = useState([]);\n  const [location, setLocation] = useState(\"\");\n  const [minCTC, setMinCTC] = useState(0);\n  const [maxCTC, setMaxCTC] = useState(0);\n  const [notes, setNotes] = useState(\"\");\n  const [HRName, setHRName] = useState(\"\");\n  const [HREmail, setHREmail] = useState(\"\");\n  const [HRPhone, setHRPhone] = useState(\"\");\n\n  const [alert, setAlert] = useState({ msg: \"\", variant: \"\" });\n\n  var submitForm = (e) => {\n    var body = {};\n    body.name = name;\n    body.company = company;\n    body.job_url = jobURL;\n    body.source = source;\n    body.skills = skills;\n    body.location = location;\n    body.ctc_min = minCTC;\n    body.ctc_max = maxCTC;\n    body.notes = notes;\n    body.hr = { name: HRName, email: HREmail, phone: HRPhone };\n    body.applied = new Date().toString();\n    if (job_id) {\n      body.job_id = job_id;\n      Api.editJob(body, (response) => {\n        if (response.status) {\n          setAlert({ msg: response.message, variant: \"success\" });\n          history.goBack();\n        } else {\n          setAlert({ msg: response.message, variant: \"danger\" });\n        }\n      });\n    } else {\n      Api.newJob(body, (response) => {\n        if (response.status) {\n          setAlert({ msg: response.message, variant: \"success\" });\n          history.goBack();\n        } else {\n          setAlert({ msg: response.message, variant: \"danger\" });\n        }\n      });\n    }\n  };\n  ///if job_id is present, get job details for EDIT form.\n  useEffect(() => {\n    if (job_id) {\n      Api.getJobDetails(job_id, (response) => {\n        console.log(response);\n        if (response.status) {\n          var { data } = response;\n          setName(data.name);\n          setCompany(data.company);\n          setJobURL(data.job_url);\n          setSource(data.source);\n          setSkills(data.skills);\n          setLocation(data.location);\n          setMinCTC(data.ctc_min);\n          setMaxCTC(data.ctc_max);\n          setNotes(data.notes);\n          setHRName(data.hr.name);\n          setHREmail(data.hr.email);\n          setHRPhone(data.hr.phone);\n        } else {\n          console.error(\"Job not found.\");\n          job_id = undefined;\n        }\n      });\n    }\n  }, []);\n\n  return (\n    <Container>\n      <h3>Create New Job</h3>\n      <Form>\n        <Row>\n          <Col>\n            <FormGroup>\n              <FormLabel>Job Position</FormLabel>\n              <FormControl\n                type=\"text\"\n                placeholder=\"Enter Job Position\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              />\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <FormLabel>Company</FormLabel>\n              <FormControl\n                type=\"text\"\n                placeholder=\"Enter Company Name\"\n                value={company}\n                onChange={(e) => setCompany(e.target.value)}\n              />\n            </FormGroup>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <FormGroup>\n              <FormLabel>Job URL</FormLabel>\n              <FormControl\n                type=\"url\"\n                placeholder=\"Enter Job URL\"\n                value={jobURL}\n                onChange={(e) => setJobURL(e.target.value)}\n              />\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <FormLabel>Source</FormLabel>\n              <FormControl\n                type=\"text\"\n                placeholder=\"Enter Job Source\"\n                value={source}\n                onChange={(e) => setSource(e.target.value)}\n              />\n            </FormGroup>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <FormGroup>\n              <FormLabel>Skills</FormLabel>\n              <FormControl\n                type=\"text\"\n                placeholder=\"Skills needed for this job\"\n                value={skills.join(\",\")}\n                onChange={(e) => setSkills(e.target.value.split(\",\"))}\n              />\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <FormLabel>Job Location</FormLabel>\n              <FormControl\n                type=\"text\"\n                placeholder=\"Enter Job Location\"\n                value={location}\n                onChange={(e) => setLocation(e.target.value)}\n              />\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <FormLabel>Minimum CTC</FormLabel>\n              <FormControl\n                type=\"text\"\n                placeholder=\"Minimum CTC\"\n                value={minCTC}\n                onChange={(e) => setMinCTC(e.target.value)}\n              />\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <FormLabel>Maximum CTC</FormLabel>\n              <FormControl\n                type=\"text\"\n                placeholder=\"Maximum CTC\"\n                value={maxCTC}\n                onChange={(e) => setMaxCTC(e.target.value)}\n              />\n            </FormGroup>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <FormGroup>\n              <FormLabel>Notes</FormLabel>\n              <FormControl\n                as=\"textarea\"\n                rows=\"3\"\n                placeholder=\"Notes about this Job\"\n                value={notes}\n                onChange={(e) => setNotes(e.target.value)}\n              />\n            </FormGroup>\n          </Col>\n          <Col>\n            <div>HR Contact</div>\n            <Row>\n              <Col>\n                <FormGroup>\n                  <FormControl\n                    type=\"text\"\n                    placeholder=\"HR Name\"\n                    value={HRName}\n                    onChange={(e) => setHRName(e.target.value)}\n                  />\n                </FormGroup>\n              </Col>\n              <Col>\n                <FormGroup>\n                  <FormControl\n                    type=\"email\"\n                    placeholder=\"HR Email Address\"\n                    value={HREmail}\n                    onChange={(e) => setHREmail(e.target.value)}\n                  />\n                </FormGroup>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <FormGroup>\n                  <FormControl\n                    type=\"tel\"\n                    placeholder=\"HR Phone Number\"\n                    value={HRPhone}\n                    onChange={(e) => setHRPhone(e.target.value)}\n                  />\n                </FormGroup>\n              </Col>\n              <Col></Col>\n            </Row>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Button\n              variant=\"primary\"\n              className=\"mr-3\"\n              onClick={(e) => submitForm(e)}\n            >\n              Save\n            </Button>\n            <Button variant=\"secondary\" onClick={()=>history.goBack()}>\n              Cancel\n            </Button>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <br/>\n            <Alert show={alert.msg!==\"\"} variant={alert.variant} dismissible onClose={()=>setAlert({msg:\"\",variant:\"\"})}>\n              {alert.msg}\n            </Alert>\n          </Col>\n        </Row>\n      </Form>\n    </Container>\n  );\n};\n\nexport default JobCMS;\n","import \"./App.css\";\nimport React from \"react\";\nimport { Nav, Navbar, NavbarBrand, NavLink } from \"react-bootstrap\";\nimport NavbarToggle from \"react-bootstrap/esm/NavbarToggle\";\nimport NavbarCollapse from \"react-bootstrap/esm/NavbarCollapse\";\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\n\nimport Home from './components/Home';\nimport Dashboard from './components/Dashboard';\nimport JobCMS from './components/JobCMS';\n\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar>\n        <NavbarBrand>Track Interview</NavbarBrand>\n        <NavbarToggle aria-controls=\"nav\" />\n        <NavbarCollapse id=\"nav\">\n          <Nav className=\"mr-auto\">\n            <NavLink as={Link} to=\"/\">\n              Home\n            </NavLink>\n            <NavLink as={Link} to=\"/dashboard\">\n              Dashboard\n            </NavLink>\n          </Nav>\n        </NavbarCollapse>\n      </Navbar>\n      <Switch>\n        <Route path=\"/dashboard\">\n          <Dashboard/>\n        </Route>\n        <Route path=\"/job-add\">\n          <JobCMS/>\n        </Route>\n        <Route path=\"/job-edit/:job_id\">\n          <JobCMS/>\n        </Route>\n        <Route path=\"/\">\n          <Home/>\n        </Route>\n        \n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Container } from \"react-bootstrap\";\nReactDOM.render(\n  <React.StrictMode>\n    <Container>\n      <App />\n    </Container>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}