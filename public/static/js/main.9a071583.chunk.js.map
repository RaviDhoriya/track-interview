{"version":3,"sources":["components/Home.js","config/Api.js","components/Dashboard.js","components/JobCMS.js","components/ActivityModal.js","components/Job.js","App.js","index.js"],"names":["Home","Container","Api","process","callback","obj","headers","method","fetch","BASE","then","response","json","err","status","message","error","job_id","body","JSON","stringify","Dashboard","useState","jobs","setJobs","useEffect","getMyJobs","data","console","Button","as","Link","to","variant","className","Table","striped","bordered","hover","map","job","index","_id","name","company","applied","onClick","e","window","confirm","params","deleteJob","newJobs","filter","JobCMS","history","useHistory","useParams","setName","setCompany","jobURL","setJobURL","reviewURL","setReviewURL","linkedinURL","setLinkedinURL","source","setSource","skills","setSkills","location","setLocation","minCTC","setMinCTC","maxCTC","setMaxCTC","notes","setNotes","HRName","setHRName","HREmail","setHREmail","HRPhone","setHRPhone","Date","appliedDate","setAppliedDate","setStatus","msg","alert","setAlert","getJobDetails","log","job_url","review_url","linkedin_url","ctc_min","ctc_max","hr","email","phone","undefined","Form","Row","Col","FormGroup","FormLabel","FormControl","type","placeholder","value","onChange","target","selected","dt","join","split","rows","sts","toString","editJob","goBack","newJob","submitForm","Alert","show","dismissible","onClose","ActivityModal","forwardRef","props","ref","blankActivity","is_schedule","schedule_date","schedule_done","setShow","isEdit","setISEdit","activity","setActivity","useImperativeHandle","showModal","oldAct","Modal","onHide","ModalHeader","ModalTitle","ModalBody","InputGroup","Prepend","Checkbox","checked","ModalFooter","activity_id","editActivity","resp","parentCallback","newActivity","Job","activities","setJob","activityModal","useRef","Jumbotron","href","icon","faExternalLinkSquareAlt","faLinkedin","faStar","skill","current","faPlus","faEdit","Fragment","size","deleteActivity","newActivities","faTrash","stamp","toLocaleDateString","toLocaleTimeString","ReactTimeAgo","date","locale","TimeAgo","addDefaultLocale","en","addLocale","App","Navbar","NavbarBrand","NavbarToggle","aria-controls","NavbarCollapse","id","Nav","NavLink","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9a071583.chunk.js","sourcesContent":["import React from \"react\";\nimport { Container } from \"react-bootstrap\";\n\nconst Home = () => {\n  return (\n    <Container>\n      <h3>Track Interview</h3>\n      Welcome to Track Interview App\n    </Container>\n  );\n};\n\nexport default Home;\n","const Api={};\nApi.BASE=process.env.REACT_APP_API_URL;\n\nApi.headers=()=>{\n    var headers={'Content-Type':'application/json'};\n    return headers;\n}\nApi.getMyJobs=(callback)=>{\n    try{\n        var obj={};\n        obj.headers=Api.headers();\n        obj.method=\"GET\";\n        fetch(Api.BASE+\"/api/jobs\",obj)\n            .then(response=> response.json())\n            .then(json=>callback(json));\n    }\n    catch(err){\n        callback({status:false,message:\"Failed to get Jobs\",error:err});\n    }\n}\nApi.getJobDetails=(job_id,callback)=>{\n    try{\n        var obj={};\n        obj.headers=Api.headers();\n        obj.method=\"GET\";\n        fetch(`${Api.BASE}/api/jobs/${job_id}`,obj)\n            .then(response=> response.json())\n            .then(json=>callback(json));\n    }\n    catch(err){\n        callback({status:false,message:\"Failed to get job details\",error:err});\n    }\n}\n\nApi.newJob=(body,callback)=>{\n    try{\n        var obj={};\n        obj.headers=Api.headers();\n        obj.method=\"POST\";\n        obj.body=JSON.stringify(body);\n        fetch(Api.BASE+\"/api/jobs\",obj)\n            .then(response=> response.json())\n            .then(json=>callback(json));\n    }\n    catch(err){\n        callback({status:false,message:\"Failed to add Job\",error:err});\n    }\n}\nApi.editJob=(body,callback)=>{\n    try{\n        var obj={};\n        obj.headers=Api.headers();\n        obj.method=\"PUT\";\n        obj.body=JSON.stringify(body);\n        fetch(Api.BASE+\"/api/jobs\",obj)\n            .then(response=> response.json())\n            .then(json=>callback(json));\n    }\n    catch(err){\n        callback({status:false,message:\"Failed to edit Job\",error:err});\n    }\n}\nApi.deleteJob=(body,callback)=>{\n    try{\n        var obj={};\n        obj.headers=Api.headers();\n        obj.method=\"DELETE\";\n        obj.body=JSON.stringify(body);\n        fetch(Api.BASE+\"/api/jobs\",obj)\n            .then(response=> response.json())\n            .then(json=>callback(json));\n    }\n    catch(err){\n        callback({status:false,message:\"Failed to delete Job\",error:err});\n    }\n}\nApi.newActivity=(body,callback)=>{\n    try{\n        var obj={};\n        obj.headers=Api.headers();\n        obj.method=\"POST\";\n        obj.body=JSON.stringify(body);\n        fetch(Api.BASE+\"/api/activities\",obj)\n            .then(response=> response.json())\n            .then(json=>callback(json));\n    }\n    catch(err){\n        callback({status:false,message:\"Failed to add activity\",error:err});\n    }\n}\nApi.editActivity=(body,callback)=>{\n    try{\n        var obj={};\n        obj.headers=Api.headers();\n        obj.method=\"PUT\";\n        obj.body=JSON.stringify(body);\n        fetch(Api.BASE+\"/api/activities\",obj)\n            .then(response=> response.json())\n            .then(json=>callback(json));\n    }\n    catch(err){\n        callback({status:false,message:\"Failed to edit activity\",error:err});\n    }\n}\nApi.deleteActivity=(body,callback)=>{\n    try{\n        var obj={};\n        obj.headers=Api.headers();\n        obj.method=\"DELETE\";\n        obj.body=JSON.stringify(body);\n        fetch(Api.BASE+\"/api/activities\",obj)\n            .then(response=> response.json())\n            .then(json=>callback(json));\n    }\n    catch(err){\n        callback({status:false,message:\"Failed to delete activity\",error:err});\n    }\n}\nexport default Api;","import React,{useEffect,useState} from 'react';\nimport { Button, Container, Table } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport Api from '../config/Api';\n\nconst Dashboard = ()=>{\n    var [jobs,setJobs]=useState([]);\n\n    const getMyJobs=()=>{\n        Api.getMyJobs((data)=>{\n            if(data.status){\n                //console.log(data);\n                setJobs(data.data);\n            }else{\n                console.error(\"Failed to load My Jobs\");\n            }\n        });\n    };\n    const deleteJob=(job)=>{\n        if(window.confirm(`Do you want to delete job \"${job.name} - ${job.company}?`)){\n            var params={};\n            params.job_id=job._id;\n            Api.deleteJob(params,(data)=>{\n                if(data.status){\n                    var newJobs=jobs.filter((e)=>{\n                        return e._id!==job._id\n                    });\n                    setJobs(newJobs);\n                }\n            });\n        }\n    }\n    useEffect(()=>{\n        getMyJobs();\n    },[]);\n    return (\n        <div>\n            <Container>\n                <Button as={Link} to=\"/job-add\" variant=\"outline-primary\" className=\"float-right\">[+] New Job</Button>\n                <h3>Dashboard</h3>\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <td>Sr#</td>\n                            <td>Position</td>\n                            <td>Company</td>\n                            <td>Status</td>\n                            <td>Applied</td>\n                            <td>Action</td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {jobs.map((job,index)=>{\n                        return (<tr key={job._id}>\n                            <td>{index+1}</td>\n                            <td><Link to={`/job/${job._id}`}>{job.name}</Link></td>\n                            <td>{job.company}</td>\n                            <td>{job.status}</td>\n                            <td>{job.applied}</td>\n                            <td><Button as={Link} to={`/job-edit/${job._id}`}>Edit</Button> <Button variant=\"danger\" onClick={(e)=>deleteJob(job)}>Delete</Button></td>\n                        </tr>);\n                    })}\n                    </tbody>\n                </Table>\n            </Container>\n        </div>\n    );\n}\n\nexport default Dashboard;","import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  Col,\n  Container,\n  Form,\n  FormControl,\n  FormGroup,\n  FormLabel,\n  Row,\n  Alert,\n} from \"react-bootstrap\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport ReactDatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport Api from \"../config/Api\";\n\nconst JobCMS = () => {\n  const history = useHistory();\n  var { job_id } = useParams();\n  const [name, setName] = useState(\"\");\n  const [company, setCompany] = useState(\"\");\n  const [jobURL, setJobURL] = useState(\"\");\n  const [reviewURL, setReviewURL] = useState(\"\");\n  const [linkedinURL, setLinkedinURL] = useState(\"\");\n  const [source, setSource] = useState(\"\");\n  const [skills, setSkills] = useState([]);\n  const [location, setLocation] = useState(\"\");\n  const [minCTC, setMinCTC] = useState(0);\n  const [maxCTC, setMaxCTC] = useState(0);\n  const [notes, setNotes] = useState(\"\");\n  const [HRName, setHRName] = useState(\"\");\n  const [HREmail, setHREmail] = useState(\"\");\n  const [HRPhone, setHRPhone] = useState(\"\");\n  const [appliedDate, setAppliedDate] = useState(new Date());\n  const [status,setStatus]=useState(\"applied\");\n\n  const [alert, setAlert] = useState({ msg: \"\", variant: \"\" });\n\n  var submitForm = (e) => {\n    var body = {};\n    body.name = name;\n    body.company = company;\n    body.job_url = jobURL;\n    body.review_url = reviewURL;\n    body.linkedin_url = linkedinURL;\n    body.source = source;\n    body.skills = skills;\n    body.location = location;\n    body.ctc_min = minCTC;\n    body.ctc_max = maxCTC;\n    body.notes = notes;\n    body.hr = { name: HRName, email: HREmail, phone: HRPhone };\n    if(appliedDate===\"\" || appliedDate===undefined|| appliedDate===null){\n      body.applied = null;\n    }else{\n      body.applied = appliedDate.toString();\n    }\n    body.status=status;\n    if (job_id) {\n      body.job_id = job_id;\n      Api.editJob(body, (response) => {\n        if (response.status) {\n          setAlert({ msg: response.message, variant: \"success\" });\n          history.goBack();\n        } else {\n          setAlert({ msg: response.message, variant: \"danger\" });\n        }\n      });\n    } else {\n      Api.newJob(body, (response) => {\n        if (response.status) {\n          setAlert({ msg: response.message, variant: \"success\" });\n          history.goBack();\n        } else {\n          setAlert({ msg: response.message, variant: \"danger\" });\n        }\n      });\n    }\n  };\n  ///if job_id is present, get job details for EDIT form.\n  useEffect(() => {\n    if (job_id) {\n      Api.getJobDetails(job_id, (response) => {\n        console.log(response);\n        if (response.status) {\n          var { data } = response;\n          setName(data.name);\n          setCompany(data.company);\n          setJobURL(data.job_url);\n          setReviewURL(data.review_url);\n          setLinkedinURL(data.linkedin_url);\n          setSource(data.source);\n          setSkills(data.skills);\n          setLocation(data.location);\n          setMinCTC(data.ctc_min);\n          setMaxCTC(data.ctc_max);\n          setNotes(data.notes);\n          setHRName(data.hr.name);\n          setHREmail(data.hr.email);\n          setHRPhone(data.hr.phone);\n          setAppliedDate(new Date(data.applied));\n          setStatus(data.status);\n        } else {\n          console.error(\"Job not found.\");\n          job_id = undefined;\n        }\n      });\n    }\n  }, []);\n  const arrStatus=[\"pending\",\"applied\",\"response\",\"interviewing\",\"waiting\",\"rejected\",\"offer_recieved\",\"decline\"];\n  return (\n    <Container>\n      <h3>{job_id === undefined ? \"Create New Job\" : \"Edit Job details\"}</h3>\n      <Form>\n        <Row>\n          <Col>\n            <FormGroup>\n              <FormLabel>Job Position</FormLabel>\n              <FormControl\n                type=\"text\"\n                placeholder=\"Enter Job Position\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              />\n            </FormGroup>\n          </Col>\n          <Col>\n            <Row>\n              <Col>\n                <FormGroup>\n                  <FormLabel>Company</FormLabel>\n                  <FormControl\n                    type=\"text\"\n                    placeholder=\"Enter Company Name\"\n                    value={company}\n                    onChange={(e) => setCompany(e.target.value)}\n                  />\n                </FormGroup>\n              </Col>\n              <Col>\n                <FormGroup>\n                  <FormLabel>Applied On</FormLabel>\n                  <ReactDatePicker\n                    as={FormControl}\n                    selected={appliedDate}\n                    onChange={(dt) =>\n                      setAppliedDate(dt)\n                    }\n                  />\n                </FormGroup>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <FormGroup>\n              <FormLabel>Job URL</FormLabel>\n              <FormControl\n                type=\"url\"\n                placeholder=\"Enter Job URL\"\n                value={jobURL}\n                onChange={(e) => setJobURL(e.target.value)}\n              />\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <FormLabel>LinkedIn URL</FormLabel>\n              <FormControl\n                type=\"text\"\n                placeholder=\"Enter LinkedIn URL\"\n                value={linkedinURL}\n                onChange={(e) => setLinkedinURL(e.target.value)}\n              />\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <FormLabel>\n                Review URL <small>(eg. Glassdoor)</small>\n              </FormLabel>\n              <FormControl\n                type=\"url\"\n                placeholder=\"Enter Review URL\"\n                value={reviewURL}\n                onChange={(e) => setReviewURL(e.target.value)}\n              />\n            </FormGroup>\n          </Col>\n\n          <Col>\n            <FormGroup>\n              <FormLabel>Source</FormLabel>\n              <FormControl\n                type=\"text\"\n                placeholder=\"Enter Job Source\"\n                value={source}\n                onChange={(e) => setSource(e.target.value)}\n              />\n            </FormGroup>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <FormGroup>\n              <FormLabel>Skills</FormLabel>\n              <FormControl\n                type=\"text\"\n                placeholder=\"Skills needed for this job\"\n                value={skills.join(\",\")}\n                onChange={(e) => setSkills(e.target.value.split(\",\"))}\n              />\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <FormLabel>Job Location</FormLabel>\n              <FormControl\n                type=\"text\"\n                placeholder=\"Enter Job Location\"\n                value={location}\n                onChange={(e) => setLocation(e.target.value)}\n              />\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <FormLabel>Minimum CTC</FormLabel>\n              <FormControl\n                type=\"text\"\n                placeholder=\"Minimum CTC\"\n                value={minCTC}\n                onChange={(e) => setMinCTC(e.target.value)}\n              />\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <FormLabel>Maximum CTC</FormLabel>\n              <FormControl\n                type=\"text\"\n                placeholder=\"Maximum CTC\"\n                value={maxCTC}\n                onChange={(e) => setMaxCTC(e.target.value)}\n              />\n            </FormGroup>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <FormGroup>\n              <FormLabel>Notes</FormLabel>\n              <FormControl\n                as=\"textarea\"\n                rows=\"3\"\n                placeholder=\"Notes about this Job\"\n                value={notes}\n                onChange={(e) => setNotes(e.target.value)}\n              />\n            </FormGroup>\n          </Col>\n          <Col>\n            <div>HR Contact</div>\n            <Row>\n              <Col>\n                <FormGroup>\n                  <FormControl\n                    type=\"text\"\n                    placeholder=\"HR Name\"\n                    value={HRName}\n                    onChange={(e) => setHRName(e.target.value)}\n                  />\n                </FormGroup>\n              </Col>\n              <Col>\n                <FormGroup>\n                  <FormControl\n                    type=\"email\"\n                    placeholder=\"HR Email Address\"\n                    value={HREmail}\n                    onChange={(e) => setHREmail(e.target.value)}\n                  />\n                </FormGroup>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <FormGroup>\n                  <FormControl\n                    type=\"tel\"\n                    placeholder=\"HR Phone Number\"\n                    value={HRPhone}\n                    onChange={(e) => setHRPhone(e.target.value)}\n                  />\n                </FormGroup>\n              </Col>\n              <Col>\n              <FormGroup>\n                <FormControl as=\"select\" onChange={(e) => setStatus(e.target.value)}>{arrStatus.map((sts,index)=>{\n                  return <option key={`x${index}`} value={sts} selected={sts===status}>{sts}</option>;\n                })}</FormControl>\n              </FormGroup>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Button\n              variant=\"primary\"\n              className=\"mr-3\"\n              onClick={(e) => submitForm(e)}\n            >\n              Save\n            </Button>\n            <Button variant=\"secondary\" onClick={() => history.goBack()}>\n              Cancel\n            </Button>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <br />\n            <Alert\n              show={alert.msg !== \"\"}\n              variant={alert.variant}\n              dismissible\n              onClose={() => setAlert({ msg: \"\", variant: \"\" })}\n            >\n              {alert.msg}\n            </Alert>\n          </Col>\n        </Row>\n      </Form>\n    </Container>\n  );\n};\n\nexport default JobCMS;\n","import React, { forwardRef, useImperativeHandle, useState } from \"react\";\nimport {\n  Button,\n  Form,\n  FormControl,\n  FormGroup,\n  FormLabel,\n  InputGroup,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalTitle,\n} from \"react-bootstrap\";\nimport ModalHeader from \"react-bootstrap/esm/ModalHeader\";\nimport ReactDatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Api from \"../config/Api\";\n\nconst ActivityModal = forwardRef((props, ref) => {\n  const blankActivity = {\n    body: \"\",\n    is_schedule: false,\n    schedule_date: new Date(),\n    schedule_done: false,\n  };\n\n  const [show, setShow] = useState(false);\n  const [isEdit, setISEdit] = useState(false);\n  const [activity, setActivity] = useState(blankActivity);\n  const [date, setDate] = useState(new Date());\n\n  const job = props.job;\n  useImperativeHandle(ref, () => {\n    return {\n      showModal: (oldAct) => {\n        setShow(true);\n        if (oldAct == null) {\n          setISEdit(false);\n          setActivity(blankActivity);\n        } else {\n          setISEdit(true);\n          oldAct.schedule_date = new Date(oldAct.schedule_date);\n          if (oldAct.is_schedule) {\n            oldAct.is_schedule = true;\n          } else {\n            oldAct.is_schedule = false;\n          }\n          if (oldAct.schedule_done) {\n            oldAct.schedule_done = true;\n          } else {\n            oldAct.schedule_done = false;\n          }\n          setActivity(oldAct);\n        }\n      },\n    };\n  });\n  const submitForm = () => {\n    var body = {};\n    body.job_id = job._id;\n    body.body = activity.body;\n    body.is_schedule = activity.is_schedule;\n    body.schedule_date = activity.schedule_date;\n    body.schedule_done = activity.schedule_done;\n    if (isEdit) {\n      body.activity_id = activity._id;\n      Api.editActivity(body, (resp) => {\n        if(resp.status){\n          setShow(false);\n          props.parentCallback();\n        }\n      });\n    } else {\n      Api.newActivity(body, (resp) => {\n        if(resp.status){\n          setShow(false);\n          props.parentCallback();\n        }\n      });\n    }\n  };\n  return (\n    <Modal show={show} onHide={() => {}}>\n      <ModalHeader>\n        <ModalTitle>{isEdit ? \"Edit Activity\" : \"New Activity\"}</ModalTitle>\n      </ModalHeader>\n      <ModalBody>\n        <Form>\n          <FormGroup>\n            <FormLabel>Description</FormLabel>\n            <FormControl\n              type=\"text\"\n              placeholder=\"Description\"\n              value={activity.body}\n              onChange={(e) =>\n                setActivity({ ...activity, body: e.target.value })\n              }\n            ></FormControl>\n          </FormGroup>\n          <FormLabel>Set Reminder</FormLabel>\n          <InputGroup>\n            <InputGroup.Prepend>\n              <InputGroup.Checkbox\n                checked={activity.is_schedule}\n                onChange={(e) =>\n                  setActivity({\n                    ...activity,\n                    is_schedule: !activity.is_schedule,\n                  })\n                }\n              />\n            </InputGroup.Prepend>\n            <ReactDatePicker\n              as={FormControl}\n              selected={activity.schedule_date}\n              onChange={(dt) =>\n                setActivity({ ...activity, schedule_date: new Date(dt) })\n              }\n            />\n          </InputGroup>\n        </Form>\n      </ModalBody>\n      <ModalFooter>\n        <Button variant=\"primary\" onClick={submitForm}>\n          Save\n        </Button>\n        <Button\n          variant=\"secondary\"\n          onClick={() => {\n            setShow(false);\n            props.parentCallback();\n          }}\n        >\n          Cancel\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n});\n\nexport default ActivityModal;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Container, Row, Col, Jumbotron, Button, Modal } from \"react-bootstrap\";\nimport { useParams,Link } from \"react-router-dom\";\nimport Api from \"../config/Api\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLinkedin } from \"@fortawesome/free-brands-svg-icons\";\nimport {\n  faEdit,\n  faExternalLinkSquareAlt,\n  faPlus,\n  faStar,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport ReactTimeAgo from \"react-time-ago\";\nimport ActivityModal from \"./ActivityModal\";\n\nconst Job = () => {\n  const { job_id } = useParams();\n  const [job, setJob] = useState({ skills: [], activities: [] });\n  const activityModal = useRef();\n\n  const getJobDetails = () => {\n    Api.getJobDetails(job_id, (resp) => {\n      if (resp.status) {\n        setJob(resp.data);\n      }\n    });\n  };\n\n  useEffect(() => {\n    getJobDetails();\n  }, []);\n  const parentCallback=()=>{\n    getJobDetails();\n  };\n  const deleteActivity=(activity)=>{\n    if(window.confirm(\"Do you want to delete this activity?\")){\n      var params={};\n      params.activity_id=activity._id;\n      Api.deleteActivity(params,(data)=>{\n          if(data.status){\n              var newActivities=job.activities.filter((e)=>{\n                  return e._id!==activity._id\n              });\n              setJob({...job,activities:newActivities});\n          }\n      });\n    }\n  };\n  return (\n    <Container>\n      <hr />\n      <Row>\n        <Col>\n          <Jumbotron>\n            <h3 className=\"company-name\">\n              {job.company} <small>({job.location})</small>\n            </h3>\n            <div className=\"position-name\">\n              {job.name}{\" \"}\n              <small>\n                <a href={job.job_url} target=\"_new\">\n                  {job.source}{\" \"}\n                  <FontAwesomeIcon icon={faExternalLinkSquareAlt} />\n                </a>\n              </small>\n            </div>\n            <div className=\"icon-row\">\n              <a href={job.linkedin_url} target=\"_new\">\n                <FontAwesomeIcon icon={faLinkedin} /> LinkedIn\n              </a>{\" \"}\n              |{\" \"}\n              <a href={job.review_url} target=\"_new\">\n                <FontAwesomeIcon icon={faStar} /> Glassdoor Review\n              </a>{\" \"}\n            </div>\n            <div className=\"skill-row\">\n              {job.skills.map((skill, index) => {\n                return <span className=\"skill-tag\">{skill}</span>;\n              })}\n            </div>\n            <div className=\"ctc-row\">\n              CTC: {job.ctc_min}\n              {job.ctc_max !== \"\" ? \" - \" + job.ctc_max : \"\"}\n            </div>\n          </Jumbotron>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div className=\"activity-add\">\n            <Button\n              variant=\"success\"\n              className=\"float-right\"\n              onClick={() => activityModal.current.showModal(null)}\n            >\n              <FontAwesomeIcon icon={faPlus} /> New Activity\n            </Button>\n            <Button\n              as={Link}\n              variant=\"warning\"\n              className=\"float-right mr-3\"\n              to={`/job-edit/${job._id}`}\n\n            >\n              <FontAwesomeIcon icon={faEdit} /> Edit\n            </Button>\n            <ActivityModal job={job} ref={activityModal} parentCallback={parentCallback}/>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col className=\"activity-list\">\n          {job.activities.map((activity, index) => {\n            return (\n              <React.Fragment key={index}>\n                <div className=\"activity-box\" >\n                  <div className=\"activity-buttons\">\n                    <Button variant=\"danger\" size=\"sm\" onClick={()=>{ deleteActivity(activity)}}>\n                      <FontAwesomeIcon icon={faTrash} />\n                    </Button>\n                    {\"  \"}\n                    <Button\n                      variant=\"warning\"\n                      size=\"sm\"\n                      onClick={() => activityModal.current.showModal(activity)}\n                    >\n                      <FontAwesomeIcon icon={faEdit} />\n                    </Button>\n                  </div>\n                  <div className=\"activity-head\">\n                    {`${new Date(\n                      activity.stamp\n                    ).toLocaleDateString()} ${new Date(\n                      activity.stamp\n                    ).toLocaleTimeString()}`}{\" \"}\n                    <ReactTimeAgo\n                      date={new Date(activity.stamp)}\n                      locale=\"en-US\"\n                    />\n                  </div>\n                  <div className=\"activity-body\">{activity.body}</div>\n                </div>\n              </React.Fragment>\n            );\n          })}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\nexport default Job;\n","import \"./App.css\";\nimport React from \"react\";\nimport { Nav, Navbar, NavbarBrand, NavLink } from \"react-bootstrap\";\nimport NavbarToggle from \"react-bootstrap/esm/NavbarToggle\";\nimport NavbarCollapse from \"react-bootstrap/esm/NavbarCollapse\";\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\n\nimport Home from './components/Home';\nimport Dashboard from './components/Dashboard';\nimport JobCMS from './components/JobCMS';\nimport Job from \"./components/Job\";\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\n\nTimeAgo.addDefaultLocale(en);\nTimeAgo.addLocale(en);\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar>\n        <NavbarBrand>Track Interview</NavbarBrand>\n        <NavbarToggle aria-controls=\"nav\" />\n        <NavbarCollapse id=\"nav\">\n          <Nav className=\"mr-auto\">\n            <NavLink as={Link} to=\"/\">\n              Home\n            </NavLink>\n            <NavLink as={Link} to=\"/dashboard\">\n              Dashboard\n            </NavLink>\n          </Nav>\n        </NavbarCollapse>\n      </Navbar>\n      <Switch>\n        <Route path=\"/dashboard\">\n          <Dashboard/>\n        </Route>\n        <Route path=\"/job-add\">\n          <JobCMS/>\n        </Route>\n        <Route path=\"/job-edit/:job_id\">\n          <JobCMS/>\n        </Route>\n        <Route path=\"/job/:job_id\">\n          <Job/>\n        </Route>\n        <Route path=\"/\">\n          <Home/>\n        </Route>\n        \n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Container } from \"react-bootstrap\";\nReactDOM.render(\n    <Container>\n      <App />\n    </Container>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}