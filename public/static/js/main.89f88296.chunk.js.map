{"version":3,"sources":["config/Api.js","components/Home.js","components/Dashboard.js","components/JobCMS.js","components/ActivityModal.js","components/Job.js","components/Login.js","App.js","index.js"],"names":["Api","process","headers","token","localStorage","getItem","Authorization","body","callback","obj","method","JSON","stringify","fetch","BASE","then","response","json","err","status","message","error","params","console","log","strParams","objectToURL","job_id","data","Object","keys","map","k","encodeURIComponent","join","Home","props","useState","parse","user","stats","setStats","jobStatus","Map","set","useEffect","getJobStats","logout","Container","name","className","to","_id","get","count","Dashboard","jobs","setJobs","job_status","useParams","getMyJobs","Button","as","Link","variant","Table","striped","bordered","hover","job","index","company","date","Date","updated","locale","onClick","e","window","confirm","deleteJob","newJobs","filter","JobCMS","history","useHistory","setName","setCompany","jobURL","setJobURL","reviewURL","setReviewURL","linkedinURL","setLinkedinURL","source","setSource","skills","setSkills","location","setLocation","minCTC","setMinCTC","maxCTC","setMaxCTC","notes","setNotes","HRName","setHRName","HREmail","setHREmail","HRPhone","setHRPhone","appliedDate","setAppliedDate","setStatus","msg","alert","setAlert","getJobDetails","job_url","review_url","linkedin_url","ctc_min","ctc_max","hr","email","phone","applied","undefined","Form","Row","Col","FormGroup","FormLabel","FormControl","type","placeholder","value","onChange","target","selected","dt","split","rows","sts","toString","editJob","goBack","newJob","submitForm","Alert","show","dismissible","onClose","ActivityModal","forwardRef","ref","blankActivity","is_schedule","schedule_date","schedule_done","setShow","isEdit","setISEdit","activity","setActivity","useImperativeHandle","showModal","oldAct","Modal","onHide","ModalHeader","ModalTitle","ModalBody","InputGroup","Prepend","Checkbox","checked","ModalFooter","activity_id","editActivity","resp","parentCallback","newActivity","Job","activities","setJob","activityModal","useRef","Jumbotron","href","icon","faExternalLinkSquareAlt","faLinkedin","faStar","skill","current","faPlus","faEdit","Fragment","size","deleteActivity","newActivities","faTrash","stamp","toLocaleDateString","toLocaleTimeString","Login","lEmail","setLoginEmail","lPassword","setLoginPassword","nName","setNewName","nEmail","setNewEmail","nPassword","setNewPassword","nPassword2","setNewPassword2","parentCheckLogin","startSession","setItem","password","login","checkLogin","signup","TimeAgo","addDefaultLocale","en","addLocale","App","isLoggedIn","isLogged","setIsLogged","removeItem","Navbar","NavbarBrand","NavbarToggle","aria-controls","NavbarCollapse","id","Nav","NavLink","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.89f88296.chunk.js","sourcesContent":["const Api={};\nApi.BASE=process.env.REACT_APP_API_URL;\n\nApi.headers=()=>{\n    var headers={'Content-Type':'application/json'};\n    var token=localStorage.getItem(\"token\")||false;\n    if(token){\n        headers.Authorization=\"Bearer \"+token;\n    }\n    return headers;\n}\nApi.login=(body,callback)=>{\n    try{\n        var obj={};\n        obj.headers=Api.headers();\n        obj.method=\"POST\";\n        obj.body=JSON.stringify(body);\n        fetch(Api.BASE+\"/api/login\",obj)\n            .then(response=> response.json())\n            .then(json=>callback(json));\n    }\n    catch(err){\n        callback({status:false,message:\"Failed to validate user\",error:err});\n    }\n};\nApi.signup=(body,callback)=>{\n    try{\n        var obj={};\n        obj.headers=Api.headers();\n        obj.method=\"POST\";\n        obj.body=JSON.stringify(body);\n        fetch(Api.BASE+\"/api/signup\",obj)\n            .then(response=> response.json())\n            .then(json=>callback(json));\n    }\n    catch(err){\n        callback({status:false,message:\"Failed to register new user\",error:err});\n    }\n};\nApi.getJobStats=(callback)=>{\n    try{\n        var obj={};\n        obj.headers=Api.headers();\n        obj.method=\"GET\";\n        fetch(Api.BASE+\"/api/jobs/stats\",obj)\n            .then(response=> response.json())\n            .then(json=>callback(json));\n    }\n    catch(err){\n        callback({status:false,message:\"Failed to get Job stats\",error:err});\n    }\n}\nApi.getMyJobs=(params,callback)=>{\n    try{\n        var obj={};\n        obj.headers=Api.headers();\n        obj.method=\"GET\";\n        console.log(params);\n        var strParams=Api.objectToURL(params);\n        fetch(Api.BASE+\"/api/jobs?\"+strParams,obj)\n            .then(response=> response.json())\n            .then(json=>callback(json));\n    }\n    catch(err){\n        callback({status:false,message:\"Failed to get Jobs\",error:err});\n    }\n}\nApi.getJobDetails=(job_id,callback)=>{\n    try{\n        var obj={};\n        obj.headers=Api.headers();\n        obj.method=\"GET\";\n        fetch(`${Api.BASE}/api/jobs/${job_id}`,obj)\n            .then(response=> response.json())\n            .then(json=>callback(json));\n    }\n    catch(err){\n        callback({status:false,message:\"Failed to get job details\",error:err});\n    }\n}\n\nApi.newJob=(body,callback)=>{\n    try{\n        var obj={};\n        obj.headers=Api.headers();\n        obj.method=\"POST\";\n        obj.body=JSON.stringify(body);\n        fetch(Api.BASE+\"/api/jobs\",obj)\n            .then(response=> response.json())\n            .then(json=>callback(json));\n    }\n    catch(err){\n        callback({status:false,message:\"Failed to add Job\",error:err});\n    }\n}\nApi.editJob=(body,callback)=>{\n    try{\n        var obj={};\n        obj.headers=Api.headers();\n        obj.method=\"PUT\";\n        obj.body=JSON.stringify(body);\n        fetch(Api.BASE+\"/api/jobs\",obj)\n            .then(response=> response.json())\n            .then(json=>callback(json));\n    }\n    catch(err){\n        callback({status:false,message:\"Failed to edit Job\",error:err});\n    }\n}\nApi.deleteJob=(body,callback)=>{\n    try{\n        var obj={};\n        obj.headers=Api.headers();\n        obj.method=\"DELETE\";\n        obj.body=JSON.stringify(body);\n        fetch(Api.BASE+\"/api/jobs\",obj)\n            .then(response=> response.json())\n            .then(json=>callback(json));\n    }\n    catch(err){\n        callback({status:false,message:\"Failed to delete Job\",error:err});\n    }\n}\nApi.newActivity=(body,callback)=>{\n    try{\n        var obj={};\n        obj.headers=Api.headers();\n        obj.method=\"POST\";\n        obj.body=JSON.stringify(body);\n        fetch(Api.BASE+\"/api/activities\",obj)\n            .then(response=> response.json())\n            .then(json=>callback(json));\n    }\n    catch(err){\n        callback({status:false,message:\"Failed to add activity\",error:err});\n    }\n}\nApi.editActivity=(body,callback)=>{\n    try{\n        var obj={};\n        obj.headers=Api.headers();\n        obj.method=\"PUT\";\n        obj.body=JSON.stringify(body);\n        fetch(Api.BASE+\"/api/activities\",obj)\n            .then(response=> response.json())\n            .then(json=>callback(json));\n    }\n    catch(err){\n        callback({status:false,message:\"Failed to edit activity\",error:err});\n    }\n}\nApi.deleteActivity=(body,callback)=>{\n    try{\n        var obj={};\n        obj.headers=Api.headers();\n        obj.method=\"DELETE\";\n        obj.body=JSON.stringify(body);\n        fetch(Api.BASE+\"/api/activities\",obj)\n            .then(response=> response.json())\n            .then(json=>callback(json));\n    }\n    catch(err){\n        callback({status:false,message:\"Failed to delete activity\",error:err});\n    }\n}\n\nApi.objectToURL=(data)=>{\n    return Object.keys(data).map(function(k) {\n        return encodeURIComponent(k) + '=' + encodeURIComponent(data[k])\n    }).join('&')\n}\nexport default Api;","import React, { useEffect, useState } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Api from \"../config/Api\";\n\nconst Home = (props) => {\n  const [user,setUser]=useState(JSON.parse(localStorage.getItem(\"data\")||\"{}\"));\n  const [stats,setStats]=useState([]);\n\n  const jobStatus=new Map();\n  jobStatus.set(\"interviewing\",\"Interviewing\");\n  jobStatus.set(\"response\",\"Got Response\");\n  jobStatus.set(\"applied\",\"Applied\");\n  jobStatus.set(\"waiting\",\"Waiting\");\n  jobStatus.set(\"rejected\",\"Got Rejected\");\n  jobStatus.set(\"offer_recieved\",\"Offer Received\");\n  jobStatus.set(\"decline\",\"Declined Offer\");\n  jobStatus.set(\"pending\",\"Pending\");\n\n  var getStats=()=>{\n    Api.getJobStats((data)=>{\n      if(data.status){\n        setStats(data.data);\n      }else{\n          //token expired - let's logout. So user can login again.\n          props.logout();\n      }\n    });\n  };\n  useEffect(()=>{\n    getStats();\n  },[]);\n  return (\n    <Container>\n      <h3>Hi {user.name}!</h3>\n      Welcome to Track Interview App!\n\n      {stats.map((status)=>{\n        return <Link className=\"quick-links\" to={`/dashboard/${status._id}`}> {jobStatus.get(status._id)} ({status.count})</Link>\n      })}\n    </Container>\n  );\n};\n\nexport default Home;\n","import React,{useEffect,useState} from 'react';\nimport { Button, Container, Table } from 'react-bootstrap';\nimport { Link, useParams } from 'react-router-dom';\nimport ReactTimeAgo from 'react-time-ago/commonjs/ReactTimeAgo';\n\nimport Api from '../config/Api';\n\nconst Dashboard = (props)=>{\n    var [jobs,setJobs]=useState([]);\n    var {job_status}= useParams();\n    const getMyJobs=()=>{\n        let params={};\n        if(job_status){\n            params.status=job_status;\n        }\n        \n        Api.getMyJobs(params,(data)=>{\n            if(data.status){\n                setJobs(data.data);\n            }else{\n                //token expired - let's logout. So user can login again.\n                props.logout();\n            }\n        });\n    };\n    \n    const deleteJob=(job)=>{\n        if(window.confirm(`Do you want to delete job \"${job.name} - ${job.company}?`)){\n            var params={};\n            params.job_id=job._id;\n            Api.deleteJob(params,(data)=>{\n                if(data.status){\n                    var newJobs=jobs.filter((e)=>{\n                        return e._id!==job._id\n                    });\n                    setJobs(newJobs);\n                }\n            });\n        }\n    }\n    useEffect(()=>{\n        getMyJobs();\n    },[]);\n    return (\n        <div>\n            <Container>\n                <Button as={Link} to=\"/job-add\" variant=\"outline-primary\" className=\"float-right\">[+] New Job</Button>\n                <h3>Dashboard</h3>\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <td>Sr#</td>\n                            <td>Position</td>\n                            <td>Company</td>\n                            <td>Status</td>\n                            <td>Updated</td>\n                            <td>Action</td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {jobs.map((job,index)=>{\n                        return (<tr key={job._id}>\n                            <td>{index+1}</td>\n                            <td><Link to={`/job/${job._id}`}>{job.name}</Link></td>\n                            <td>{job.company}</td>\n                            <td>{job.status}</td>\n                            <td><ReactTimeAgo date={new Date(job.updated)} locale=\"en-US\" /></td>\n                            <td><Button as={Link} to={`/job-edit/${job._id}`}>Edit</Button> <Button variant=\"danger\" onClick={(e)=>deleteJob(job)}>Delete</Button></td>\n                        </tr>);\n                    })}\n                    </tbody>\n                </Table>\n            </Container>\n        </div>\n    );\n}\n\nexport default Dashboard;","import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  Col,\n  Container,\n  Form,\n  FormControl,\n  FormGroup,\n  FormLabel,\n  Row,\n  Alert,\n} from \"react-bootstrap\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport ReactDatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport Api from \"../config/Api\";\n\nconst JobCMS = () => {\n  const history = useHistory();\n  var { job_id } = useParams();\n  const [name, setName] = useState(\"\");\n  const [company, setCompany] = useState(\"\");\n  const [jobURL, setJobURL] = useState(\"\");\n  const [reviewURL, setReviewURL] = useState(\"\");\n  const [linkedinURL, setLinkedinURL] = useState(\"\");\n  const [source, setSource] = useState(\"\");\n  const [skills, setSkills] = useState([]);\n  const [location, setLocation] = useState(\"\");\n  const [minCTC, setMinCTC] = useState(0);\n  const [maxCTC, setMaxCTC] = useState(0);\n  const [notes, setNotes] = useState(\"\");\n  const [HRName, setHRName] = useState(\"\");\n  const [HREmail, setHREmail] = useState(\"\");\n  const [HRPhone, setHRPhone] = useState(\"\");\n  const [appliedDate, setAppliedDate] = useState(new Date());\n  const [status,setStatus]=useState(\"applied\");\n\n  const [alert, setAlert] = useState({ msg: \"\", variant: \"\" });\n\n  var submitForm = (e) => {\n    var body = {};\n    body.name = name;\n    body.company = company;\n    body.job_url = jobURL;\n    body.review_url = reviewURL;\n    body.linkedin_url = linkedinURL;\n    body.source = source;\n    body.skills = skills;\n    body.location = location;\n    body.ctc_min = minCTC;\n    body.ctc_max = maxCTC;\n    body.notes = notes;\n    body.hr = { name: HRName, email: HREmail, phone: HRPhone };\n    if(appliedDate===\"\" || appliedDate===undefined|| appliedDate===null){\n      body.applied = null;\n    }else{\n      body.applied = appliedDate.toString();\n    }\n    body.status=status;\n    if (job_id) {\n      body.job_id = job_id;\n      Api.editJob(body, (response) => {\n        if (response.status) {\n          setAlert({ msg: response.message, variant: \"success\" });\n          history.goBack();\n        } else {\n          setAlert({ msg: response.message, variant: \"danger\" });\n        }\n      });\n    } else {\n      Api.newJob(body, (response) => {\n        if (response.status) {\n          setAlert({ msg: response.message, variant: \"success\" });\n          history.goBack();\n        } else {\n          setAlert({ msg: response.message, variant: \"danger\" });\n        }\n      });\n    }\n  };\n  ///if job_id is present, get job details for EDIT form.\n  useEffect(() => {\n    if (job_id) {\n      Api.getJobDetails(job_id, (response) => {\n        console.log(response);\n        if (response.status) {\n          var { data } = response;\n          setName(data.name);\n          setCompany(data.company);\n          setJobURL(data.job_url);\n          setReviewURL(data.review_url);\n          setLinkedinURL(data.linkedin_url);\n          setSource(data.source);\n          setSkills(data.skills);\n          setLocation(data.location);\n          setMinCTC(data.ctc_min);\n          setMaxCTC(data.ctc_max);\n          setNotes(data.notes);\n          setHRName(data.hr.name);\n          setHREmail(data.hr.email);\n          setHRPhone(data.hr.phone);\n          setAppliedDate(new Date(data.applied));\n          setStatus(data.status);\n        } else {\n          console.error(\"Job not found.\");\n          job_id = undefined;\n        }\n      });\n    }\n  }, []);\n  const arrStatus=[\"pending\",\"applied\",\"response\",\"interviewing\",\"waiting\",\"rejected\",\"offer_recieved\",\"decline\"];\n  return (\n    <Container>\n      <h3>{job_id === undefined ? \"Create New Job\" : \"Edit Job details\"}</h3>\n      <Form>\n        <Row>\n          <Col>\n            <FormGroup>\n              <FormLabel>Job Position</FormLabel>\n              <FormControl\n                type=\"text\"\n                placeholder=\"Enter Job Position\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              />\n            </FormGroup>\n          </Col>\n          <Col>\n            <Row>\n              <Col>\n                <FormGroup>\n                  <FormLabel>Company</FormLabel>\n                  <FormControl\n                    type=\"text\"\n                    placeholder=\"Enter Company Name\"\n                    value={company}\n                    onChange={(e) => setCompany(e.target.value)}\n                  />\n                </FormGroup>\n              </Col>\n              <Col>\n                <FormGroup>\n                  <FormLabel>Applied On</FormLabel>\n                  <ReactDatePicker\n                    as={FormControl}\n                    selected={appliedDate}\n                    onChange={(dt) =>\n                      setAppliedDate(dt)\n                    }\n                  />\n                </FormGroup>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <FormGroup>\n              <FormLabel>Job URL</FormLabel>\n              <FormControl\n                type=\"url\"\n                placeholder=\"Enter Job URL\"\n                value={jobURL}\n                onChange={(e) => setJobURL(e.target.value)}\n              />\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <FormLabel>LinkedIn URL</FormLabel>\n              <FormControl\n                type=\"text\"\n                placeholder=\"Enter LinkedIn URL\"\n                value={linkedinURL}\n                onChange={(e) => setLinkedinURL(e.target.value)}\n              />\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <FormLabel>\n                Review URL <small>(eg. Glassdoor)</small>\n              </FormLabel>\n              <FormControl\n                type=\"url\"\n                placeholder=\"Enter Review URL\"\n                value={reviewURL}\n                onChange={(e) => setReviewURL(e.target.value)}\n              />\n            </FormGroup>\n          </Col>\n\n          <Col>\n            <FormGroup>\n              <FormLabel>Source</FormLabel>\n              <FormControl\n                type=\"text\"\n                placeholder=\"Enter Job Source\"\n                value={source}\n                onChange={(e) => setSource(e.target.value)}\n              />\n            </FormGroup>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <FormGroup>\n              <FormLabel>Skills</FormLabel>\n              <FormControl\n                type=\"text\"\n                placeholder=\"Skills needed for this job\"\n                value={skills.join(\",\")}\n                onChange={(e) => setSkills(e.target.value.split(\",\"))}\n              />\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <FormLabel>Job Location</FormLabel>\n              <FormControl\n                type=\"text\"\n                placeholder=\"Enter Job Location\"\n                value={location}\n                onChange={(e) => setLocation(e.target.value)}\n              />\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <FormLabel>Minimum CTC</FormLabel>\n              <FormControl\n                type=\"text\"\n                placeholder=\"Minimum CTC\"\n                value={minCTC}\n                onChange={(e) => setMinCTC(e.target.value)}\n              />\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <FormLabel>Maximum CTC</FormLabel>\n              <FormControl\n                type=\"text\"\n                placeholder=\"Maximum CTC\"\n                value={maxCTC}\n                onChange={(e) => setMaxCTC(e.target.value)}\n              />\n            </FormGroup>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <FormGroup>\n              <FormLabel>Notes</FormLabel>\n              <FormControl\n                as=\"textarea\"\n                rows=\"3\"\n                placeholder=\"Notes about this Job\"\n                value={notes}\n                onChange={(e) => setNotes(e.target.value)}\n              />\n            </FormGroup>\n          </Col>\n          <Col>\n            <div>HR Contact</div>\n            <Row>\n              <Col>\n                <FormGroup>\n                  <FormControl\n                    type=\"text\"\n                    placeholder=\"HR Name\"\n                    value={HRName}\n                    onChange={(e) => setHRName(e.target.value)}\n                  />\n                </FormGroup>\n              </Col>\n              <Col>\n                <FormGroup>\n                  <FormControl\n                    type=\"email\"\n                    placeholder=\"HR Email Address\"\n                    value={HREmail}\n                    onChange={(e) => setHREmail(e.target.value)}\n                  />\n                </FormGroup>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <FormGroup>\n                  <FormControl\n                    type=\"tel\"\n                    placeholder=\"HR Phone Number\"\n                    value={HRPhone}\n                    onChange={(e) => setHRPhone(e.target.value)}\n                  />\n                </FormGroup>\n              </Col>\n              <Col>\n              <FormGroup>\n                <FormControl as=\"select\" onChange={(e) => setStatus(e.target.value)}>{arrStatus.map((sts,index)=>{\n                  return <option key={`x${index}`} value={sts} selected={sts===status}>{sts}</option>;\n                })}</FormControl>\n              </FormGroup>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Button\n              variant=\"primary\"\n              className=\"mr-3\"\n              onClick={(e) => submitForm(e)}\n            >\n              Save\n            </Button>\n            <Button variant=\"secondary\" onClick={() => history.goBack()}>\n              Cancel\n            </Button>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <br />\n            <Alert\n              show={alert.msg !== \"\"}\n              variant={alert.variant}\n              dismissible\n              onClose={() => setAlert({ msg: \"\", variant: \"\" })}\n            >\n              {alert.msg}\n            </Alert>\n          </Col>\n        </Row>\n      </Form>\n    </Container>\n  );\n};\n\nexport default JobCMS;\n","import React, { forwardRef, useImperativeHandle, useState } from \"react\";\nimport {\n  Button,\n  Form,\n  FormControl,\n  FormGroup,\n  FormLabel,\n  InputGroup,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalTitle,\n} from \"react-bootstrap\";\nimport ModalHeader from \"react-bootstrap/esm/ModalHeader\";\nimport ReactDatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Api from \"../config/Api\";\n\nconst ActivityModal = forwardRef((props, ref) => {\n  const blankActivity = {\n    body: \"\",\n    is_schedule: false,\n    schedule_date: new Date(),\n    schedule_done: false,\n  };\n\n  const [show, setShow] = useState(false);\n  const [isEdit, setISEdit] = useState(false);\n  const [activity, setActivity] = useState(blankActivity);\n  const [date, setDate] = useState(new Date());\n\n  const job = props.job;\n  useImperativeHandle(ref, () => {\n    return {\n      showModal: (oldAct) => {\n        setShow(true);\n        if (oldAct == null) {\n          setISEdit(false);\n          setActivity(blankActivity);\n        } else {\n          setISEdit(true);\n          oldAct.schedule_date = new Date(oldAct.schedule_date);\n          if (oldAct.is_schedule) {\n            oldAct.is_schedule = true;\n          } else {\n            oldAct.is_schedule = false;\n          }\n          if (oldAct.schedule_done) {\n            oldAct.schedule_done = true;\n          } else {\n            oldAct.schedule_done = false;\n          }\n          setActivity(oldAct);\n        }\n      },\n    };\n  });\n  const submitForm = () => {\n    var body = {};\n    body.job_id = job._id;\n    body.body = activity.body;\n    body.is_schedule = activity.is_schedule;\n    body.schedule_date = activity.schedule_date;\n    body.schedule_done = activity.schedule_done;\n    if (isEdit) {\n      body.activity_id = activity._id;\n      Api.editActivity(body, (resp) => {\n        if(resp.status){\n          setShow(false);\n          props.parentCallback();\n        }\n      });\n    } else {\n      Api.newActivity(body, (resp) => {\n        if(resp.status){\n          setShow(false);\n          props.parentCallback();\n        }\n      });\n    }\n  };\n  return (\n    <Modal show={show} onHide={() => {}}>\n      <ModalHeader>\n        <ModalTitle>{isEdit ? \"Edit Activity\" : \"New Activity\"}</ModalTitle>\n      </ModalHeader>\n      <ModalBody>\n        <Form>\n          <FormGroup>\n            <FormLabel>Description</FormLabel>\n            <FormControl\n              type=\"text\"\n              placeholder=\"Description\"\n              value={activity.body}\n              onChange={(e) =>\n                setActivity({ ...activity, body: e.target.value })\n              }\n            ></FormControl>\n          </FormGroup>\n          <FormLabel>Set Reminder</FormLabel>\n          <InputGroup>\n            <InputGroup.Prepend>\n              <InputGroup.Checkbox\n                checked={activity.is_schedule}\n                onChange={(e) =>\n                  setActivity({\n                    ...activity,\n                    is_schedule: !activity.is_schedule,\n                  })\n                }\n              />\n            </InputGroup.Prepend>\n            <ReactDatePicker\n              as={FormControl}\n              selected={activity.schedule_date}\n              onChange={(dt) =>\n                setActivity({ ...activity, schedule_date: new Date(dt) })\n              }\n            />\n          </InputGroup>\n        </Form>\n      </ModalBody>\n      <ModalFooter>\n        <Button variant=\"primary\" onClick={submitForm}>\n          Save\n        </Button>\n        <Button\n          variant=\"secondary\"\n          onClick={() => {\n            setShow(false);\n            props.parentCallback();\n          }}\n        >\n          Cancel\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n});\n\nexport default ActivityModal;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Container, Row, Col, Jumbotron, Button, Modal } from \"react-bootstrap\";\nimport { useParams,Link } from \"react-router-dom\";\nimport Api from \"../config/Api\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLinkedin } from \"@fortawesome/free-brands-svg-icons\";\nimport {\n  faEdit,\n  faExternalLinkSquareAlt,\n  faPlus,\n  faStar,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport ReactTimeAgo from \"react-time-ago\";\nimport ActivityModal from \"./ActivityModal\";\n\nconst Job = () => {\n  const { job_id } = useParams();\n  const [job, setJob] = useState({ skills: [], activities: [] });\n  const activityModal = useRef();\n\n  const getJobDetails = () => {\n    Api.getJobDetails(job_id, (resp) => {\n      if (resp.status) {\n        setJob(resp.data);\n      }\n    });\n  };\n\n  useEffect(() => {\n    getJobDetails();\n  }, []);\n  const parentCallback=()=>{\n    getJobDetails();\n  };\n  const deleteActivity=(activity)=>{\n    if(window.confirm(\"Do you want to delete this activity?\")){\n      var params={};\n      params.activity_id=activity._id;\n      Api.deleteActivity(params,(data)=>{\n          if(data.status){\n              var newActivities=job.activities.filter((e)=>{\n                  return e._id!==activity._id\n              });\n              setJob({...job,activities:newActivities});\n          }\n      });\n    }\n  };\n  return (\n    <Container>\n      <hr />\n      <Row>\n        <Col>\n          <Jumbotron>\n            <h3 className=\"company-name\">\n              {job.company} <small>({job.location})</small>\n            </h3>\n            <div className=\"position-name\">\n              {job.name}{\" \"}\n              <small>\n                <a href={job.job_url} target=\"_new\">\n                  {job.source}{\" \"}\n                  <FontAwesomeIcon icon={faExternalLinkSquareAlt} />\n                </a>\n              </small>\n            </div>\n            <div className=\"icon-row\">\n              <a href={job.linkedin_url} target=\"_new\">\n                <FontAwesomeIcon icon={faLinkedin} /> LinkedIn\n              </a>{\" \"}\n              |{\" \"}\n              <a href={job.review_url} target=\"_new\">\n                <FontAwesomeIcon icon={faStar} /> Glassdoor Review\n              </a>{\" \"}\n            </div>\n            <div className=\"skill-row\">\n              {job.skills.map((skill, index) => {\n                return <span className=\"skill-tag\">{skill}</span>;\n              })}\n            </div>\n            <div className=\"ctc-row\">\n              CTC: {job.ctc_min}\n              {job.ctc_max !== \"\" ? \" - \" + job.ctc_max : \"\"}\n            </div>\n          </Jumbotron>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div className=\"activity-add\">\n            <Button\n              variant=\"success\"\n              className=\"float-right\"\n              onClick={() => activityModal.current.showModal(null)}\n            >\n              <FontAwesomeIcon icon={faPlus} /> New Activity\n            </Button>\n            <Button\n              as={Link}\n              variant=\"warning\"\n              className=\"float-right mr-3\"\n              to={`/job-edit/${job._id}`}\n\n            >\n              <FontAwesomeIcon icon={faEdit} /> Edit\n            </Button>\n            <ActivityModal job={job} ref={activityModal} parentCallback={parentCallback}/>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col className=\"activity-list\">\n          {job.activities.map((activity, index) => {\n            return (\n              <React.Fragment key={index}>\n                <div className=\"activity-box\" >\n                  <div className=\"activity-buttons\">\n                    <Button variant=\"danger\" size=\"sm\" onClick={()=>{ deleteActivity(activity)}}>\n                      <FontAwesomeIcon icon={faTrash} />\n                    </Button>\n                    {\"  \"}\n                    <Button\n                      variant=\"warning\"\n                      size=\"sm\"\n                      onClick={() => activityModal.current.showModal(activity)}\n                    >\n                      <FontAwesomeIcon icon={faEdit} />\n                    </Button>\n                  </div>\n                  <div className=\"activity-head\">\n                    {`${new Date(\n                      activity.stamp\n                    ).toLocaleDateString()} ${new Date(\n                      activity.stamp\n                    ).toLocaleTimeString()}`}{\" \"}\n                    <ReactTimeAgo\n                      date={new Date(activity.stamp)}\n                      locale=\"en-US\"\n                    />\n                  </div>\n                  <div className=\"activity-body\">{activity.body}</div>\n                </div>\n              </React.Fragment>\n            );\n          })}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\nexport default Job;\n","import React, { Fragment, useState } from \"react\";\nimport {\n  Button,\n  Col,\n  Container,\n  Form,\n  FormControl,\n  FormGroup,\n  FormLabel,\n  Jumbotron,\n  Row,\n} from \"react-bootstrap\";\nimport Api from \"../config/Api\";\n\nconst Login = (props) => {\n    const [lEmail,setLoginEmail]=useState(\"\");\n    const [lPassword,setLoginPassword]=useState(\"\");\n    \n    const [nName,setNewName]=useState(\"\");\n    const [nEmail,setNewEmail]=useState(\"\");\n    const [nPassword,setNewPassword]=useState(\"\");\n    const [nPassword2,setNewPassword2]=useState(\"\");\n    \n    const parentCheckLogin=props.parentCheckLogin;\n    const checkLogin=()=>{\n        let body={};\n        body.email=lEmail;\n        body.password=lPassword;\n        Api.login(body,(resp)=>{\n            if(resp.status){\n                startSession(resp.data);\n            }else{\n                alert(resp.message);\n            }\n        });\n    };\n    const signup=()=>{\n        let body={};\n        body.name=nName;\n        body.email=nEmail;\n        body.password=nPassword;\n        Api.signup(body,(resp)=>{\n            if(resp.status){\n                startSession(resp.data);\n            }else{\n                alert(resp.message);\n            }\n        });\n    };\n    const startSession=(data)=>{\n        localStorage.setItem(\"token\",data.token);\n        localStorage.setItem(\"data\",JSON.stringify(data.user));\n        parentCheckLogin();\n    };\n  return (\n    <Fragment>\n      <Container>\n        <Jumbotron>\n          <h2>Track Interview</h2>\n        </Jumbotron>\n        <br/>\n        <Row>\n          <Col>\n            <Form>\n              <center>\n                <h3>Login</h3>\n              </center>\n              <FormGroup>\n                <FormLabel>Email</FormLabel>\n                <FormControl type=\"text\" placeholder=\"Enter Email address\" value={lEmail} onChange={(e)=>setLoginEmail(e.target.value)}/>\n              </FormGroup>\n              <FormGroup>\n                <FormLabel>Password</FormLabel>\n                <FormControl type=\"password\" placeholder=\"Enter Password\"  value={lPassword} onChange={(e)=>setLoginPassword(e.target.value)}/>\n              </FormGroup>\n              <Button onClick={()=>checkLogin()}>Login</Button>\n            </Form>\n          </Col>\n          <Col>\n            <Form>\n              <center>\n                <h3>Signup</h3>\n              </center>\n              <FormGroup>\n                <FormLabel>Name</FormLabel>\n                <FormControl type=\"text\" placeholder=\"Enter Name\" value={nName} onChange={(e)=>setNewName(e.target.value)}/>\n              </FormGroup>\n              <FormGroup>\n                <FormLabel>Email</FormLabel>\n                <FormControl type=\"text\" placeholder=\"Enter Email address\" value={nEmail} onChange={(e)=>setNewEmail(e.target.value)}/>\n              </FormGroup>\n              <FormGroup>\n                <FormLabel>Password</FormLabel>\n                <FormControl type=\"password\" placeholder=\"Enter Password\" value={nPassword} onChange={(e)=>setNewPassword(e.target.value)}/>\n              </FormGroup>\n              <FormGroup>\n                <FormLabel>Confirm Password</FormLabel>\n                <FormControl type=\"password\" placeholder=\"Confirm Password\" value={nPassword2} onChange={(e)=>setNewPassword2(e.target.value)}/>\n              </FormGroup>\n              <Button onClick={()=>signup()}>Signup</Button>\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n    </Fragment>\n  );\n};\n\nexport default Login;\n","import \"./App.css\";\nimport React, { useState } from \"react\";\nimport { Nav, Navbar, NavbarBrand, NavLink } from \"react-bootstrap\";\nimport NavbarToggle from \"react-bootstrap/esm/NavbarToggle\";\nimport NavbarCollapse from \"react-bootstrap/esm/NavbarCollapse\";\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\n\nimport Home from './components/Home';\nimport Dashboard from './components/Dashboard';\nimport JobCMS from './components/JobCMS';\nimport Job from \"./components/Job\";\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nimport Login from \"./components/Login\";\n\nTimeAgo.addDefaultLocale(en);\nTimeAgo.addLocale(en);\n\nfunction App() {\n  const isLoggedIn=()=>{\n    return localStorage.getItem(\"token\")||false;\n  };\n  const [isLogged,setIsLogged]=useState(isLoggedIn());\n  \n  const checkLogin=()=>{\n    setIsLogged(isLoggedIn());\n  };\n  const logout=()=>{\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"data\");\n    checkLogin();\n  };\n  if(!isLogged){\n    return (<Login parentCheckLogin={checkLogin}/>);\n  }else\n    return (\n    <Router>\n      <Navbar>\n        <NavbarBrand>Track Interview</NavbarBrand>\n        <NavbarToggle aria-controls=\"nav\" />\n        <NavbarCollapse id=\"nav\">\n          <Nav className=\"mr-auto\">\n            <NavLink as={Link} to=\"/\">\n              Home\n            </NavLink>\n            <NavLink as={Link} to=\"/dashboard\">\n              Dashboard\n            </NavLink>\n            <NavLink onClick={()=>logout()}>Logout</NavLink>\n          </Nav>\n        </NavbarCollapse>\n      </Navbar>\n      <Switch>\n        <Route path=\"/dashboard/:job_status?\">\n          <Dashboard logout={logout}/>\n        </Route>\n        <Route path=\"/job-add\">\n          <JobCMS/>\n        </Route>\n        <Route path=\"/job-edit/:job_id\">\n          <JobCMS/>\n        </Route>\n        <Route path=\"/job/:job_id\">\n          <Job/>\n        </Route>\n        <Route path=\"/\">\n          <Home logout={logout}/>\n        </Route>\n        \n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Container } from \"react-bootstrap\";\nReactDOM.render(\n    <Container>\n      <App />\n    </Container>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}